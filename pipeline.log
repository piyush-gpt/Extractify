2025-06-23 23:22:28,635 - __main__ - INFO - Configuration validated successfully
2025-06-23 23:22:28,763 - __main__ - INFO - Processing driving_license documents from: documents/driving_license
2025-06-23 23:22:28,763 - pipeline - INFO - Found 1 files to process in documents/driving_license
2025-06-23 23:22:28,763 - pipeline - INFO - Processing document: documents/driving_license/generated_license_10.png
2025-06-23 23:22:28,763 - pipeline - INFO - Extracting text using OCR...
2025-06-23 23:22:30,973 - pipeline - INFO - Extracted 771 characters of text
2025-06-23 23:22:30,974 - pipeline - INFO - Extracting structured data using LLM...
2025-06-23 23:22:32,988 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 23:22:33,006 - pipeline - INFO - Document processing completed successfully
2025-06-23 23:22:33,007 - pipeline - INFO - Result saved to: output/generated_license_10_result.json
2025-06-23 23:22:33,007 - __main__ - INFO - driving_license: 1/1 documents processed successfully
2025-06-23 23:22:33,007 - __main__ - INFO - Pipeline execution completed
2025-06-23 23:24:10,735 - __main__ - INFO - Configuration validated successfully
2025-06-23 23:24:10,855 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-23 23:24:10,856 - pipeline - INFO - Found 1 files to process in documents/resumes
2025-06-23 23:24:10,856 - pipeline - INFO - Processing document: documents/resumes/50639278-9279.jpg
2025-06-23 23:24:10,856 - pipeline - INFO - Extracting text using OCR...
2025-06-23 23:24:12,731 - pipeline - INFO - Extracted 4146 characters of text
2025-06-23 23:24:12,731 - pipeline - INFO - Extracting structured data using LLM...
2025-06-23 23:24:25,221 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 23:24:25,258 - pipeline - INFO - Document processing completed successfully
2025-06-23 23:24:25,258 - pipeline - INFO - Result saved to: output/50639278-9279_result.json
2025-06-23 23:24:25,258 - __main__ - INFO - resume: 1/1 documents processed successfully
2025-06-23 23:24:25,258 - __main__ - INFO - Pipeline execution completed
2025-06-23 23:31:11,652 - __main__ - INFO - Configuration validated successfully
2025-06-23 23:31:11,776 - __main__ - INFO - Processing shop_receipt documents from: documents/shop_receipts
2025-06-23 23:31:11,777 - pipeline - INFO - Found 1 files to process in documents/shop_receipts
2025-06-23 23:31:11,777 - pipeline - INFO - Processing document: documents/shop_receipts/12.jpg
2025-06-23 23:31:11,777 - pipeline - INFO - Extracting text using OCR...
2025-06-23 23:31:12,736 - pipeline - INFO - Extracted 555 characters of text
2025-06-23 23:31:12,736 - pipeline - INFO - Extracting structured data using LLM...
2025-06-23 23:31:16,778 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 23:31:16,796 - pipeline - INFO - Document processing completed successfully
2025-06-23 23:31:16,797 - pipeline - INFO - Result saved to: output/12_result.json
2025-06-23 23:31:16,797 - __main__ - INFO - shop_receipt: 1/1 documents processed successfully
2025-06-23 23:31:16,797 - __main__ - INFO - Pipeline execution completed
2025-06-24 00:31:24,427 - __main__ - ERROR - Pipeline execution failed: GOOGLE_API_KEY environment variable is required
2025-06-24 00:31:43,561 - __main__ - INFO - Configuration validated successfully
2025-06-24 00:31:43,580 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 00:31:43,581 - pipeline - INFO - Found 1 files to process in documents/resumes
2025-06-24 00:31:43,581 - pipeline - INFO - Processing document: documents/resumes/50639278-9279.jpg
2025-06-24 00:31:43,581 - pipeline - INFO - Extracting text using OCR...
2025-06-24 00:31:45,412 - pipeline - INFO - Extracted 4146 characters of text
2025-06-24 00:31:45,412 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 00:31:56,151 - llm_service - ERROR - Error extracting data for resume: Failed to parse Resume from completion {"full_name": "Timothy F. Meiller", "email": "Not found", "phone_number": "Not found", "skills": ["Biology", "Dentistry", "Administration", "Virology", "Immunology", "Retrovirology", "Oral Diagnosis", "Patient Admissions", "Clinics Management", "Oral Medicine", "Dental Research", "Microbiology", "Board Certified in Oral Medicine"], "work_experience": [{"company": "Veterans Administration Hospital", "role": "Resident", "dates": "1976-1977"}, {"company": "University of Maryland Dental School", "role": "Instructor, Oral Diagnosis", "dates": "1977-1979"}, {"company": "University of Maryland Dental School", "role": "Assistant Professor, Oral Diagnosis", "dates": "1979-1984"}, {"company": "University of Maryland Dental School", "role": "Director of Patient Admissions", "dates": "1981-present"}, {"company": "University of Maryland Dental School", "role": "Acting Chairman, Oral Diagnosis", "dates": "1/84-9/84"}, {"company": "University of Maryland Dental School", "role": "Acting Director of Clinics", "dates": "9/84-7/85"}, {"company": "University of Maryland Dental School and Cancer Center", "role": "Associate Professor, Departments of Oral Medicine and Dentistry", "dates": "1984-present"}], "education": [{"institution": "Johns Hopkins Univ., Baltimore, MD"}]}. Got: 1 validation error for Resume
education.0.degree
  Field required [type=missing, input_value={'institution': 'Johns Ho...s Univ., Baltimore, MD'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 00:31:56,151 - pipeline - ERROR - Error processing document documents/resumes/50639278-9279.jpg: Failed to parse Resume from completion {"full_name": "Timothy F. Meiller", "email": "Not found", "phone_number": "Not found", "skills": ["Biology", "Dentistry", "Administration", "Virology", "Immunology", "Retrovirology", "Oral Diagnosis", "Patient Admissions", "Clinics Management", "Oral Medicine", "Dental Research", "Microbiology", "Board Certified in Oral Medicine"], "work_experience": [{"company": "Veterans Administration Hospital", "role": "Resident", "dates": "1976-1977"}, {"company": "University of Maryland Dental School", "role": "Instructor, Oral Diagnosis", "dates": "1977-1979"}, {"company": "University of Maryland Dental School", "role": "Assistant Professor, Oral Diagnosis", "dates": "1979-1984"}, {"company": "University of Maryland Dental School", "role": "Director of Patient Admissions", "dates": "1981-present"}, {"company": "University of Maryland Dental School", "role": "Acting Chairman, Oral Diagnosis", "dates": "1/84-9/84"}, {"company": "University of Maryland Dental School", "role": "Acting Director of Clinics", "dates": "9/84-7/85"}, {"company": "University of Maryland Dental School and Cancer Center", "role": "Associate Professor, Departments of Oral Medicine and Dentistry", "dates": "1984-present"}], "education": [{"institution": "Johns Hopkins Univ., Baltimore, MD"}]}. Got: 1 validation error for Resume
education.0.degree
  Field required [type=missing, input_value={'institution': 'Johns Ho...s Univ., Baltimore, MD'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 00:31:56,152 - pipeline - INFO - Result saved to: output/50639278-9279_result.json
2025-06-24 00:31:56,152 - __main__ - INFO - resume: 0/1 documents processed successfully
2025-06-24 00:31:56,152 - __main__ - INFO - Pipeline execution completed
2025-06-24 00:34:09,655 - __main__ - INFO - Configuration validated successfully
2025-06-24 00:34:09,662 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 00:34:09,662 - pipeline - INFO - Found 1 files to process in documents/resumes
2025-06-24 00:34:09,662 - pipeline - INFO - Processing document: documents/resumes/50639278-9279.jpg
2025-06-24 00:34:09,662 - pipeline - INFO - Extracting text using OCR...
2025-06-24 00:34:11,292 - pipeline - INFO - Extracted 4146 characters of text
2025-06-24 00:34:11,292 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 00:34:22,587 - llm_service - ERROR - Error extracting data for resume: Failed to parse Resume from completion {"full_name": "Timothy F. Meiller", "email": "Not found", "phone_number": "Not found", "skills": ["Biology", "Dentistry", "Administration", "Virology", "Immunology", "Retrovirology", "Oral Medicine"], "work_experience": [{"company": "Veterans Administration Hospital, Baltimore, MD", "role": "Resident", "dates": "1976-1977"}, {"company": "University of Maryland Dental School", "role": "Instructor, Oral Diagnosis", "dates": "1977-1979"}, {"company": "University of Maryland Dental School", "role": "Assistant Professor, Oral Diagnosis", "dates": "1979-1984"}, {"company": "University of Maryland Dental School", "role": "Director of Patient Admissions", "dates": "1981-present"}, {"company": "University of Maryland Dental School", "role": "Acting Chairman, Oral Diagnosis", "dates": "1/84-9/84"}, {"company": "University of Maryland Dental School", "role": "Acting Director of Clinics", "dates": "9/84-7/85"}, {"company": "University of Maryland Dental School and Cancer Center", "role": "Associate Professor, Departments of Oral Medicine and Dentistry", "dates": "1984-present"}], "education": [{"institution": "Johns Hopkins University", "degree": "B.A. in Biology", "graduation_year": 1970}, {"institution": "University"}]}. Got: 1 validation error for Resume
education.1.degree
  Field required [type=missing, input_value={'institution': 'University'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 00:34:22,587 - pipeline - ERROR - Error processing document documents/resumes/50639278-9279.jpg: Failed to parse Resume from completion {"full_name": "Timothy F. Meiller", "email": "Not found", "phone_number": "Not found", "skills": ["Biology", "Dentistry", "Administration", "Virology", "Immunology", "Retrovirology", "Oral Medicine"], "work_experience": [{"company": "Veterans Administration Hospital, Baltimore, MD", "role": "Resident", "dates": "1976-1977"}, {"company": "University of Maryland Dental School", "role": "Instructor, Oral Diagnosis", "dates": "1977-1979"}, {"company": "University of Maryland Dental School", "role": "Assistant Professor, Oral Diagnosis", "dates": "1979-1984"}, {"company": "University of Maryland Dental School", "role": "Director of Patient Admissions", "dates": "1981-present"}, {"company": "University of Maryland Dental School", "role": "Acting Chairman, Oral Diagnosis", "dates": "1/84-9/84"}, {"company": "University of Maryland Dental School", "role": "Acting Director of Clinics", "dates": "9/84-7/85"}, {"company": "University of Maryland Dental School and Cancer Center", "role": "Associate Professor, Departments of Oral Medicine and Dentistry", "dates": "1984-present"}], "education": [{"institution": "Johns Hopkins University", "degree": "B.A. in Biology", "graduation_year": 1970}, {"institution": "University"}]}. Got: 1 validation error for Resume
education.1.degree
  Field required [type=missing, input_value={'institution': 'University'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 00:34:22,588 - pipeline - INFO - Result saved to: output/50639278-9279_result.json
2025-06-24 00:34:22,588 - __main__ - INFO - resume: 0/1 documents processed successfully
2025-06-24 00:34:22,588 - __main__ - INFO - Pipeline execution completed
2025-06-24 00:36:26,794 - __main__ - INFO - Configuration validated successfully
2025-06-24 00:36:26,812 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 00:36:26,812 - pipeline - INFO - Found 1 files to process in documents/resumes
2025-06-24 00:36:26,812 - pipeline - INFO - Processing document: documents/resumes/50639278-9279.jpg
2025-06-24 00:36:26,812 - pipeline - INFO - Extracting text using OCR...
2025-06-24 00:36:28,693 - pipeline - INFO - Extracted 4146 characters of text
2025-06-24 00:36:28,693 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 00:36:38,156 - llm_service - ERROR - Error extracting data for resume: Invalid json output: 
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 00:36:38,156 - pipeline - ERROR - Error processing document documents/resumes/50639278-9279.jpg: Invalid json output: 
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 00:36:38,157 - pipeline - INFO - Result saved to: output/50639278-9279_result.json
2025-06-24 00:36:38,157 - __main__ - INFO - resume: 0/1 documents processed successfully
2025-06-24 00:36:38,157 - __main__ - INFO - Pipeline execution completed
2025-06-24 00:38:13,918 - __main__ - INFO - Configuration validated successfully
2025-06-24 00:38:14,041 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 00:38:14,041 - pipeline - INFO - Found 1 files to process in documents/resumes
2025-06-24 00:38:14,041 - pipeline - INFO - Processing document: documents/resumes/50639278-9279.jpg
2025-06-24 00:38:14,041 - pipeline - INFO - Extracting text using OCR...
2025-06-24 00:38:15,671 - pipeline - INFO - Extracted 4146 characters of text
2025-06-24 00:38:15,672 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 00:38:26,591 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 00:38:26,628 - pipeline - INFO - Document processing completed successfully
2025-06-24 00:38:26,628 - pipeline - INFO - Result saved to: output/50639278-9279_result.json
2025-06-24 00:38:26,629 - __main__ - INFO - resume: 1/1 documents processed successfully
2025-06-24 00:38:26,629 - __main__ - INFO - Pipeline execution completed
2025-06-24 00:39:16,765 - __main__ - INFO - Configuration validated successfully
2025-06-24 00:39:16,882 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 00:39:16,883 - pipeline - INFO - Found 1 files to process in documents/resumes
2025-06-24 00:39:16,883 - pipeline - INFO - Processing document: documents/resumes/50639278-9279.jpg
2025-06-24 00:39:16,883 - pipeline - INFO - Extracting text using OCR...
2025-06-24 00:39:18,660 - pipeline - INFO - Extracted 4146 characters of text
2025-06-24 00:39:18,660 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 00:39:24,959 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 00:39:24,976 - llm_service - ERROR - Error extracting data for resume: Failed to parse Resume from completion {"full_name": "Timothy F. Meiller", "email": "Not found", "phone_number": "Not found", "skills": ["Biology", "Administration", "Virol/Immunol", "Retrovirology"], "work_experience": [{"company": "Veterans Administration Hospital", "role": "Resident", "dates": "1976-1977"}, {"company": "University of Maryland Dental School", "role": "Instructor, Oral Diagnosis", "dates": "1977-1979"}, {"company": "University of Maryland Dental School", "role": "Assistant Professor, Oral Diagnosis", "dates": "1979-1984"}, {"company": "University of Maryland Dental School", "role": "Director of Patient Admissions", "dates": "1981-present"}, {"company": "University of Maryland Dental School", "role": "Acting Chairman, Oral Diagnosis", "dates": "1/84-9/84"}, {"company": "University of Maryland Dental School", "role": "Acting Director of Clinics", "dates": "9/84-7/85"}, {"company": "University of Maryland Dental School and Cancer Center", "role": "Associate Professor, Departments of Oral Medicine and Dentistry", "dates": "1984-present"}], "education": [{"institution": "Johns Hopkins Univ.", "degree": "B.A.", "graduation_year": 1970}, {"institution": "Univ. of MD Dental School", "degree": "D.D.S.", "graduation_year": 1975}, {"institution": "Johns Hopkins Univ.", "degree": "M.S.", "graduation_year": 1978}, {"institution": "Univ. of MD Graduate School", "degree": "Ph.D.", "graduation_year": 1992}, {"institution": "Johns Hopkins Univ. School of Medicine", "degree": "Post Doc.", "graduation_year": "6/92-3/93"}]}. Got: 1 validation error for Resume
education.4.graduation_year
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='6/92-3/93', input_type=str]
    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 00:39:24,976 - pipeline - ERROR - Error processing document documents/resumes/50639278-9279.jpg: Failed to parse Resume from completion {"full_name": "Timothy F. Meiller", "email": "Not found", "phone_number": "Not found", "skills": ["Biology", "Administration", "Virol/Immunol", "Retrovirology"], "work_experience": [{"company": "Veterans Administration Hospital", "role": "Resident", "dates": "1976-1977"}, {"company": "University of Maryland Dental School", "role": "Instructor, Oral Diagnosis", "dates": "1977-1979"}, {"company": "University of Maryland Dental School", "role": "Assistant Professor, Oral Diagnosis", "dates": "1979-1984"}, {"company": "University of Maryland Dental School", "role": "Director of Patient Admissions", "dates": "1981-present"}, {"company": "University of Maryland Dental School", "role": "Acting Chairman, Oral Diagnosis", "dates": "1/84-9/84"}, {"company": "University of Maryland Dental School", "role": "Acting Director of Clinics", "dates": "9/84-7/85"}, {"company": "University of Maryland Dental School and Cancer Center", "role": "Associate Professor, Departments of Oral Medicine and Dentistry", "dates": "1984-present"}], "education": [{"institution": "Johns Hopkins Univ.", "degree": "B.A.", "graduation_year": 1970}, {"institution": "Univ. of MD Dental School", "degree": "D.D.S.", "graduation_year": 1975}, {"institution": "Johns Hopkins Univ.", "degree": "M.S.", "graduation_year": 1978}, {"institution": "Univ. of MD Graduate School", "degree": "Ph.D.", "graduation_year": 1992}, {"institution": "Johns Hopkins Univ. School of Medicine", "degree": "Post Doc.", "graduation_year": "6/92-3/93"}]}. Got: 1 validation error for Resume
education.4.graduation_year
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='6/92-3/93', input_type=str]
    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 00:39:24,977 - pipeline - INFO - Result saved to: output/50639278-9279_result.json
2025-06-24 00:39:24,977 - __main__ - INFO - resume: 0/1 documents processed successfully
2025-06-24 00:39:24,977 - __main__ - INFO - Pipeline execution completed
2025-06-24 00:42:50,915 - __main__ - INFO - Configuration validated successfully
2025-06-24 00:42:51,042 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 00:42:51,043 - pipeline - INFO - Found 1 files to process in documents/resumes
2025-06-24 00:42:51,044 - pipeline - INFO - Processing document: documents/resumes/50639278-9279.jpg
2025-06-24 00:42:51,044 - pipeline - INFO - Extracting text using OCR...
2025-06-24 00:42:52,757 - pipeline - INFO - Extracted 4146 characters of text
2025-06-24 00:42:52,758 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 00:43:00,768 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 00:43:00,785 - pipeline - INFO - Document processing completed successfully
2025-06-24 00:43:00,786 - pipeline - INFO - Result saved to: output/50639278-9279_result.json
2025-06-24 00:43:00,786 - __main__ - INFO - resume: 1/1 documents processed successfully
2025-06-24 00:43:00,786 - __main__ - INFO - Pipeline execution completed
2025-06-24 09:37:14,296 - __main__ - INFO - Configuration validated successfully
2025-06-24 09:37:14,440 - __main__ - INFO - Processing driving_license documents from: documents/driving_license
2025-06-24 09:37:14,441 - pipeline - INFO - Found 1 files to process in documents/driving_license
2025-06-24 09:37:14,441 - pipeline - INFO - Processing document: documents/driving_license/generated_license_10.png
2025-06-24 09:37:14,441 - pipeline - INFO - Extracting text using OCR...
2025-06-24 09:37:16,521 - pipeline - INFO - Extracted 771 characters of text
2025-06-24 09:37:16,521 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 09:37:18,390 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 09:37:18,410 - pipeline - INFO - Document processing completed successfully
2025-06-24 09:37:18,411 - pipeline - INFO - Result saved to: output/generated_license_10_result.json
2025-06-24 09:37:18,412 - __main__ - INFO - driving_license: 1/1 documents processed successfully
2025-06-24 09:37:18,412 - __main__ - INFO - Pipeline execution completed
2025-06-24 09:38:03,377 - __main__ - INFO - Configuration validated successfully
2025-06-24 09:38:03,468 - __main__ - INFO - Processing shop_receipt documents from: documents/shop_receipts
2025-06-24 09:38:03,468 - pipeline - INFO - Found 1 files to process in documents/shop_receipts
2025-06-24 09:38:03,468 - pipeline - INFO - Processing document: documents/shop_receipts/12.jpg
2025-06-24 09:38:03,468 - pipeline - INFO - Extracting text using OCR...
2025-06-24 09:38:04,520 - pipeline - INFO - Extracted 555 characters of text
2025-06-24 09:38:04,521 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 09:38:07,018 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 09:38:07,034 - llm_service - ERROR - Error extracting data for shop_receipt: Failed to parse ShopReceipt from completion {"merchant_name": "WAL+MART", "total_amount": 18.75, "date_of_purchase": "2007-10-20", "items": [{"name": "SW FIGURES", "quantity": 6.63, "price": 1}, {"name": "TOOTHBRUSH", "quantity": 0.96, "price": 1}, {"name": "WOMEN SLIPPE", "quantity": 9.86, "price": 1}], "payment_method": "MCARD TEND"}. Got: 3 validation errors for ShopReceipt
items.0.quantity
  Input should be a valid integer, got a number with a fractional part [type=int_from_float, input_value=6.63, input_type=float]
    For further information visit https://errors.pydantic.dev/2.10/v/int_from_float
items.1.quantity
  Input should be a valid integer, got a number with a fractional part [type=int_from_float, input_value=0.96, input_type=float]
    For further information visit https://errors.pydantic.dev/2.10/v/int_from_float
items.2.quantity
  Input should be a valid integer, got a number with a fractional part [type=int_from_float, input_value=9.86, input_type=float]
    For further information visit https://errors.pydantic.dev/2.10/v/int_from_float
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 09:38:07,034 - pipeline - ERROR - Error processing document documents/shop_receipts/12.jpg: Failed to parse ShopReceipt from completion {"merchant_name": "WAL+MART", "total_amount": 18.75, "date_of_purchase": "2007-10-20", "items": [{"name": "SW FIGURES", "quantity": 6.63, "price": 1}, {"name": "TOOTHBRUSH", "quantity": 0.96, "price": 1}, {"name": "WOMEN SLIPPE", "quantity": 9.86, "price": 1}], "payment_method": "MCARD TEND"}. Got: 3 validation errors for ShopReceipt
items.0.quantity
  Input should be a valid integer, got a number with a fractional part [type=int_from_float, input_value=6.63, input_type=float]
    For further information visit https://errors.pydantic.dev/2.10/v/int_from_float
items.1.quantity
  Input should be a valid integer, got a number with a fractional part [type=int_from_float, input_value=0.96, input_type=float]
    For further information visit https://errors.pydantic.dev/2.10/v/int_from_float
items.2.quantity
  Input should be a valid integer, got a number with a fractional part [type=int_from_float, input_value=9.86, input_type=float]
    For further information visit https://errors.pydantic.dev/2.10/v/int_from_float
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 09:38:07,035 - pipeline - INFO - Result saved to: output/12_result.json
2025-06-24 09:38:07,035 - __main__ - INFO - shop_receipt: 0/1 documents processed successfully
2025-06-24 09:38:07,035 - __main__ - INFO - Pipeline execution completed
2025-06-24 09:39:52,649 - __main__ - INFO - Configuration validated successfully
2025-06-24 09:39:52,739 - __main__ - INFO - Processing shop_receipt documents from: documents/shop_receipts
2025-06-24 09:39:52,739 - pipeline - INFO - Found 1 files to process in documents/shop_receipts
2025-06-24 09:39:52,739 - pipeline - INFO - Processing document: documents/shop_receipts/12.jpg
2025-06-24 09:39:52,739 - pipeline - INFO - Extracting text using OCR...
2025-06-24 09:39:53,711 - pipeline - INFO - Extracted 555 characters of text
2025-06-24 09:39:53,712 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 09:39:56,460 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 09:39:56,475 - pipeline - INFO - Document processing completed successfully
2025-06-24 09:39:56,476 - pipeline - INFO - Result saved to: output/12_result.json
2025-06-24 09:39:56,476 - __main__ - INFO - shop_receipt: 1/1 documents processed successfully
2025-06-24 09:39:56,476 - __main__ - INFO - Pipeline execution completed
2025-06-24 09:44:06,303 - __main__ - INFO - Configuration validated successfully
2025-06-24 09:44:06,311 - __main__ - INFO - Processing driving_license documents from: documents/driving_license
2025-06-24 09:44:06,312 - pipeline - INFO - Found 1 files to process in documents/driving_license
2025-06-24 09:44:06,312 - pipeline - INFO - Processing document: documents/driving_license/generated_license_10.png
2025-06-24 09:44:06,312 - pipeline - INFO - Extracting text using OCR...
2025-06-24 09:44:08,241 - pipeline - INFO - Extracted 771 characters of text
2025-06-24 09:44:08,242 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 09:44:09,294 - pipeline - INFO - Document processing completed successfully
2025-06-24 09:44:09,295 - pipeline - INFO - Result saved to: output/generated_license_10_result.json
2025-06-24 09:44:09,296 - __main__ - INFO - driving_license: 1/1 documents processed successfully
2025-06-24 09:44:09,296 - __main__ - INFO - Pipeline execution completed
2025-06-24 09:44:33,064 - __main__ - INFO - Configuration validated successfully
2025-06-24 09:44:33,072 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 09:44:33,072 - pipeline - INFO - Found 1 files to process in documents/resumes
2025-06-24 09:44:33,072 - pipeline - INFO - Processing document: documents/resumes/50639278-9279.jpg
2025-06-24 09:44:33,072 - pipeline - INFO - Extracting text using OCR...
2025-06-24 09:44:34,626 - pipeline - INFO - Extracted 4146 characters of text
2025-06-24 09:44:34,626 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 09:44:38,758 - pipeline - INFO - Document processing completed successfully
2025-06-24 09:44:38,759 - pipeline - INFO - Result saved to: output/50639278-9279_result.json
2025-06-24 09:44:38,759 - __main__ - INFO - resume: 1/1 documents processed successfully
2025-06-24 09:44:38,760 - __main__ - INFO - Pipeline execution completed
2025-06-24 09:52:04,586 - __main__ - INFO - Configuration validated successfully
2025-06-24 09:52:04,604 - __main__ - INFO - Processing shop_receipt documents from: documents/shop_receipts
2025-06-24 09:52:04,604 - pipeline - INFO - Found 1 files to process in documents/shop_receipts
2025-06-24 09:52:04,604 - pipeline - INFO - Processing document: documents/shop_receipts/12.jpg
2025-06-24 09:52:04,604 - pipeline - INFO - Extracting text using OCR...
2025-06-24 09:52:05,490 - pipeline - INFO - Extracted 555 characters of text
2025-06-24 09:52:05,490 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 09:52:13,042 - pipeline - INFO - Document processing completed successfully
2025-06-24 09:52:13,044 - pipeline - INFO - Result saved to: output/12_result.json
2025-06-24 09:52:13,044 - __main__ - INFO - shop_receipt: 1/1 documents processed successfully
2025-06-24 09:52:13,045 - __main__ - INFO - Pipeline execution completed
2025-06-24 09:53:31,380 - __main__ - INFO - Configuration validated successfully
2025-06-24 09:53:31,389 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 09:53:31,390 - pipeline - INFO - Found 1 files to process in documents/resumes
2025-06-24 09:53:31,390 - pipeline - INFO - Processing document: documents/resumes/50649595-9596.jpg
2025-06-24 09:53:31,390 - pipeline - INFO - Extracting text using OCR...
2025-06-24 09:53:32,876 - pipeline - INFO - Extracted 1538 characters of text
2025-06-24 09:53:32,876 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 09:53:43,162 - llm_service - ERROR - Error extracting data for resume: Failed to parse Resume from completion {"full_name": "Rory S. Jaffe", "email": "Not found", "phone_number": "Not found", "skills": [], "work_experience": [{"company": "Stanford Medical Center", "role": "Instructor, Department of Anesthesiology", "dates": "1970"}, {"company": "Keesler Air Force Base", "role": "Staff Anesthesiologist", "dates": "1970-1972"}, {"company": "University of California Davis Medical Center", "role": "Assistant Professor, Department of Anesthesiology", "dates": "1972-1981"}, {"company": "University of California Davis Medical Center", "role": "Associate Clinical Professor, Department of Anesthesiology", "dates": "1981-1987"}, {"company": "California State University, Sacramento", "role": "Adjunct Professor, School of Engineering & Computer Sciences", "dates": "1986-1990"}]}. Got: 1 validation error for Resume
education
  Field required [type=missing, input_value={'full_name': 'Rory S. Ja... 'dates': '1986-1990'}]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 09:53:43,163 - pipeline - ERROR - Error processing document documents/resumes/50649595-9596.jpg: Failed to parse Resume from completion {"full_name": "Rory S. Jaffe", "email": "Not found", "phone_number": "Not found", "skills": [], "work_experience": [{"company": "Stanford Medical Center", "role": "Instructor, Department of Anesthesiology", "dates": "1970"}, {"company": "Keesler Air Force Base", "role": "Staff Anesthesiologist", "dates": "1970-1972"}, {"company": "University of California Davis Medical Center", "role": "Assistant Professor, Department of Anesthesiology", "dates": "1972-1981"}, {"company": "University of California Davis Medical Center", "role": "Associate Clinical Professor, Department of Anesthesiology", "dates": "1981-1987"}, {"company": "California State University, Sacramento", "role": "Adjunct Professor, School of Engineering & Computer Sciences", "dates": "1986-1990"}]}. Got: 1 validation error for Resume
education
  Field required [type=missing, input_value={'full_name': 'Rory S. Ja... 'dates': '1986-1990'}]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 09:53:43,163 - pipeline - INFO - Result saved to: output/50649595-9596_result.json
2025-06-24 09:53:43,164 - __main__ - INFO - resume: 0/1 documents processed successfully
2025-06-24 09:53:43,164 - __main__ - INFO - Pipeline execution completed
2025-06-24 09:55:48,298 - __main__ - INFO - Configuration validated successfully
2025-06-24 09:55:48,308 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 09:55:48,308 - pipeline - INFO - Found 1 files to process in documents/resumes
2025-06-24 09:55:48,308 - pipeline - INFO - Processing document: documents/resumes/50649595-9596.jpg
2025-06-24 09:55:48,308 - pipeline - INFO - Extracting text using OCR...
2025-06-24 09:55:49,373 - pipeline - INFO - Extracted 1538 characters of text
2025-06-24 09:55:49,374 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 09:55:56,532 - pipeline - INFO - Document processing completed successfully
2025-06-24 09:55:56,533 - pipeline - INFO - Result saved to: output/50649595-9596_result.json
2025-06-24 09:55:56,533 - __main__ - INFO - resume: 1/1 documents processed successfully
2025-06-24 09:55:56,533 - __main__ - INFO - Pipeline execution completed
2025-06-24 09:57:36,619 - __main__ - INFO - Configuration validated successfully
2025-06-24 09:57:36,629 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 09:57:36,630 - pipeline - INFO - Found 1 files to process in documents/resumes
2025-06-24 09:57:36,630 - pipeline - INFO - Processing document: documents/resumes/Piyush_Gupta_Resume.pdf
2025-06-24 09:57:36,630 - pipeline - INFO - Extracting text using OCR...
2025-06-24 09:57:41,875 - pipeline - INFO - Extracted 3468 characters of text
2025-06-24 09:57:41,876 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 09:57:46,942 - pipeline - INFO - Document processing completed successfully
2025-06-24 09:57:46,943 - pipeline - INFO - Result saved to: output/Piyush_Gupta_Resume_result.json
2025-06-24 09:57:46,943 - __main__ - INFO - resume: 1/1 documents processed successfully
2025-06-24 09:57:46,943 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:10:18,745 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:10:18,766 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 15:10:18,766 - pipeline - INFO - Found 3 files to process in documents/resumes
2025-06-24 15:10:18,766 - pipeline - INFO - Processing document: documents/resumes/50591446-1447.jpg
2025-06-24 15:10:18,766 - pipeline - INFO - Processing document: documents/resumes/50589377-9378.jpg
2025-06-24 15:10:18,766 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:10:18,766 - pipeline - INFO - Processing document: documents/resumes/Piyush_Gupta_Resume.pdf
2025-06-24 15:10:18,766 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:10:18,766 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:10:20,253 - pipeline - INFO - Extracted 2326 characters of text
2025-06-24 15:10:20,253 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:10:20,416 - pipeline - INFO - Extracted 2977 characters of text
2025-06-24 15:10:20,417 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:10:20,432 - pipeline - INFO - Extracted 3468 characters of text
2025-06-24 15:10:20,433 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:10:26,522 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:10:26,522 - pipeline - INFO - Result saved to: output/Piyush_Gupta_Resume_result.json
2025-06-24 15:10:26,666 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:10:26,667 - pipeline - INFO - Result saved to: output/50591446-1447_result.json
2025-06-24 15:10:31,819 - llm_service - ERROR - Error extracting data for resume: Invalid json output: 
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 15:10:31,819 - pipeline - ERROR - Error processing document documents/resumes/50589377-9378.jpg: Invalid json output: 
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 15:10:31,820 - pipeline - INFO - Result saved to: output/50589377-9378_result.json
2025-06-24 15:10:31,820 - __main__ - INFO - resume: 2/3 documents processed successfully
2025-06-24 15:10:31,821 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:13:33,699 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:13:33,707 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 15:13:33,707 - pipeline - INFO - Found 3 files to process in documents/resumes
2025-06-24 15:13:33,707 - pipeline - INFO - Processing document: documents/resumes/50591446-1447.jpg
2025-06-24 15:13:33,707 - pipeline - INFO - Processing document: documents/resumes/50589377-9378.jpg
2025-06-24 15:13:33,707 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:13:33,707 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:13:33,707 - pipeline - INFO - Processing document: documents/resumes/Piyush_Gupta_Resume.pdf
2025-06-24 15:13:33,707 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:13:35,252 - pipeline - INFO - Extracted 2326 characters of text
2025-06-24 15:13:35,252 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:13:35,305 - pipeline - INFO - Extracted 2977 characters of text
2025-06-24 15:13:35,305 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:13:35,583 - pipeline - INFO - Extracted 3468 characters of text
2025-06-24 15:13:35,583 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:13:41,592 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:13:41,593 - pipeline - INFO - Result saved to: output/Piyush_Gupta_Resume_result.json
2025-06-24 15:13:43,318 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:13:43,319 - pipeline - INFO - Result saved to: output/50591446-1447_result.json
2025-06-24 15:13:46,914 - llm_service - ERROR - Error extracting data for resume: Invalid json output: 
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 15:13:46,914 - llm_service - ERROR - Raw LLM output: 
2025-06-24 15:13:46,914 - pipeline - ERROR - Error processing document documents/resumes/50589377-9378.jpg: Invalid json output: 
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 15:13:46,915 - pipeline - INFO - Result saved to: output/50589377-9378_result.json
2025-06-24 15:13:46,915 - __main__ - INFO - resume: 2/3 documents processed successfully
2025-06-24 15:13:46,916 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:16:19,852 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:16:19,860 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 15:16:19,860 - pipeline - INFO - Found 3 files to process in documents/resumes
2025-06-24 15:16:19,860 - pipeline - INFO - Processing document: documents/resumes/50591446-1447.jpg
2025-06-24 15:16:19,860 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:16:19,860 - pipeline - INFO - Processing document: documents/resumes/50589377-9378.jpg
2025-06-24 15:16:19,861 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:16:19,861 - pipeline - INFO - Processing document: documents/resumes/Piyush_Gupta_Resume.pdf
2025-06-24 15:16:19,861 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:16:21,248 - pipeline - INFO - Extracted 2326 characters of text
2025-06-24 15:16:21,248 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:16:21,281 - pipeline - INFO - Extracted 2977 characters of text
2025-06-24 15:16:21,282 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:16:21,481 - pipeline - INFO - Extracted 3468 characters of text
2025-06-24 15:16:21,481 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:16:27,444 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:16:27,446 - pipeline - INFO - Result saved to: output/Piyush_Gupta_Resume_result.json
2025-06-24 15:16:30,150 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:16:30,151 - pipeline - INFO - Result saved to: output/50591446-1447_result.json
2025-06-24 15:16:33,419 - llm_service - ERROR - LLM returned empty output for document type: resume
2025-06-24 15:16:33,420 - llm_service - ERROR - Prompt sent to LLM: [HumanMessage(content='You are an expert at extracting structured data from resumes/CVs.\n\nExtract the following information from the provided text:\n- Full Name: Full name of the person\n- Email: Email address\n- Phone Number: Phone number\n- Skills: List of skills mentioned\n- Work Experience: List of work experiences with company, role, and dates\n- Education: List of educational background with institution, degree, and graduation year\n\nText from document:\nMeadows, Anna T., M.D.\nProfessor of Pediatrics\n8/15/90\nQueens College, Flushing, NY\nB.A.\nNew York University, New York, NY\nMedical College of PA, Philadelphia, PA\nM.A.\n1948-52\n1952-53\nLiberal Arts\nPsychology\nM.D.\n1965-69\nMedicine\nAwards, Honors and Membership in Honorary Societies:\n1988\n1988\n1988\n1985\n1966\n1952\nClinical Cancer Investigation Review Committee, NIH\nAlumni Achievement Award, Medical College of Pennsylvania\nContinental Bank Merit Award\nAQA Honor Medical Society, Medical College of Pennsylvania\nAQA Research Award, Medical College of Pennsylvania\nPhi Beta Kappa, Queens College, Flushing, New York\nPositions Held\n1989\n1985\nDirector, Div. of Onc., & Children\'s Cancer Research Ctr, Children\'s Hsp. of PA.\nProfessor of Pediatrics, Univ. of PA, School of Medicine, Philadelphia\n1980-85 Assoc. Prof. of Pediatrics, Univ. of PA, School of Medicine, Philadelphia\n1979 Senior Physician, Dept. of Medicine, Children\'s Hospital of Philadelphia\n1976-79 Assoc. Physician, Dept. of Medicine, Children\'s Hospital of Philadelphia\n1975-80 Asst. Prof. of Pediatrics, University of PA, School of Medicine, Philadelphia\n1974-76 Asst. Physician, Dept. of Medicine, Children\'s Hospital of Philadelphia\nSelected Publications\n1.\n2.\n3.\n4.\n5.\n6.\n7.\n8.\nMeadows, A.T., Evans, A.E. Effects of chemotherapy on the central nervous system:\nA study of parenteral methotrexate in long-term survivors of leukemia and lymphoma\nin childhood. Cancer 37:107901085, 1976.\nD\'Angio, G.J., Meadows, A.T., Mike, V., Harris, C.C., Evans, A.W., Jaffe, N.,\nNewton, W., Schweisguth, O., Sutow, W., Morris-Jones, P. Decreased risk of\nradiation-associated second malignant neoplasms in actinomycin D-treated patients.\nCancer 37:1177-1185, 1976.\nLittman, P., Meadows, A.T., Polgar, G., Borns, P., Rubin, E. Pulmonary function\nin survivors of Wilms\' tumor: Patterns of impairment. Cancer 37:2773-2776, 1976.\nMeadows, A.T., D\'Angio, G.J., Mike, V., Banfi, A., Harris, C., Jenkin, R.D.T.,\nSchwartz, A. Patterns of second malignant neoplasms in children. Cancer 40:1903-\n1911, 1977.\nMeadows, A.T., Strong, L.C., Li, F.P., D\'Angio, G.J., Schweisguth, O., Freeman,\nA.I., Jenkin, R.D.T., Morris-Jones, P., Nesbit, M.E. Bone sarcoma as a second\nmalignant neoplasm in children: Influence of radiation and genetic predisposition.\nCancer 46:2603-2606, 1980.\nMeadows, A.T., Gordon, J., Massari, D.J., Littman, P., Fergusson, J., Moss, K.\nDeclines in IQ scores and cognitive dysfunctions in children with acute\nlymphocytic leukaemia treated with cranial irradiation. Lancet 2:1015-1018, 1981.\nCancer\nMike, V., Meadows, A.T., D\'Angio, G.J. Incidence of second malignant neoplasms in\nchildren: Results of an international study. Lancet 2:1326-1331, 1982.\nTucker, M.A., Meadows, A.T., Boice, J.D., Hoover, R.N., Fraumeni, J.F.\nrisk following treatment of childhood cancer. In Radiation Carcinogenesis:\nEpidemiological and Biological Significance, Fraumeni, J.F., & Boice, J.D. (Eds).\nRaven Press, NY pp 211-224, 1983.\n50589377\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"Education": {"description": "Model for education entries", "properties": {"institution": {"description": "Educational institution name", "title": "Institution", "type": "string"}, "degree": {"description": "Degree obtained", "title": "Degree", "type": "string"}, "graduation_year": {"anyOf": [{"type": "integer"}, {"type": "string"}, {"type": "null"}], "default": null, "description": "Year of graduation or date range", "title": "Graduation Year"}}, "required": ["institution", "degree"], "title": "Education", "type": "object"}, "WorkExperience": {"description": "Model for work experience entries", "properties": {"company": {"description": "Company name", "title": "Company", "type": "string"}, "role": {"description": "Job title/role", "title": "Role", "type": "string"}, "dates": {"description": "Employment period (e.g., \'2020-2023\' or \'Jan 2020 - Dec 2023\')", "title": "Dates", "type": "string"}}, "required": ["company", "role", "dates"], "title": "WorkExperience", "type": "object"}}, "description": "Model for resume/CV data extraction", "properties": {"full_name": {"description": "Full name of the person", "title": "Full Name", "type": "string"}, "email": {"description": "Email address", "title": "Email", "type": "string"}, "phone_number": {"description": "Phone number", "title": "Phone Number", "type": "string"}, "skills": {"description": "List of skills", "items": {"type": "string"}, "title": "Skills", "type": "array"}, "work_experience": {"description": "List of work experiences", "items": {"$ref": "#/$defs/WorkExperience"}, "title": "Work Experience", "type": "array"}, "education": {"anyOf": [{"items": {"$ref": "#/$defs/Education"}, "type": "array"}, {"type": "null"}], "default": [], "description": "List of educational background", "title": "Education"}}, "required": ["full_name", "email", "phone_number", "skills", "work_experience"]}\n```\n\nImportant notes:\n- You MUST include ALL fields in the response, even if they are empty or not found\n- If any field cannot be found, use "Not found" as the value\n- For skills, work_experience, and education, use empty arrays [] if none are found\n- For graduation_year, use the actual year (e.g., 2020) if available, or the date range as a string (e.g., "6/92-3/93") if it\'s a range\n- Extract as many skills, work experiences, and education entries as possible\n- Be precise with dates and formatting\n- Always include the education field, even if it\'s an empty array\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:16:33,420 - llm_service - ERROR - Error extracting data for resume: LLM returned empty output.
2025-06-24 15:16:33,420 - llm_service - ERROR - Raw LLM output: 
2025-06-24 15:16:33,420 - pipeline - ERROR - Error processing document documents/resumes/50589377-9378.jpg: LLM returned empty output.
2025-06-24 15:16:33,421 - pipeline - INFO - Result saved to: output/50589377-9378_result.json
2025-06-24 15:16:33,422 - __main__ - INFO - resume: 2/3 documents processed successfully
2025-06-24 15:16:33,422 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:19:25,571 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:19:25,579 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 15:19:25,579 - pipeline - INFO - Found 1 files to process in documents/resumes
2025-06-24 15:19:25,579 - pipeline - INFO - Processing document: documents/resumes/50589377-9378.jpg
2025-06-24 15:19:25,579 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:19:27,086 - pipeline - INFO - Extracted 2977 characters of text
2025-06-24 15:19:27,086 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:19:38,768 - llm_service - ERROR - LLM returned empty output for document type: resume
2025-06-24 15:19:38,769 - llm_service - ERROR - Prompt sent to LLM: [HumanMessage(content='You are an expert at extracting structured data from resumes/CVs.\n\nExtract the following information from the provided text:\n- Full Name: Full name of the person\n- Email: Email address\n- Phone Number: Phone number\n- Skills: List of skills mentioned\n- Work Experience: List of work experiences with company, role, and dates\n- Education: List of educational background with institution, degree, and graduation year\n\nText from document:\nMeadows, Anna T., M.D.\nProfessor of Pediatrics\n8/15/90\nQueens College, Flushing, NY\nB.A.\nNew York University, New York, NY\nMedical College of PA, Philadelphia, PA\nM.A.\n1948-52\n1952-53\nLiberal Arts\nPsychology\nM.D.\n1965-69\nMedicine\nAwards, Honors and Membership in Honorary Societies:\n1988\n1988\n1988\n1985\n1966\n1952\nClinical Cancer Investigation Review Committee, NIH\nAlumni Achievement Award, Medical College of Pennsylvania\nContinental Bank Merit Award\nAQA Honor Medical Society, Medical College of Pennsylvania\nAQA Research Award, Medical College of Pennsylvania\nPhi Beta Kappa, Queens College, Flushing, New York\nPositions Held\n1989\n1985\nDirector, Div. of Onc., & Children\'s Cancer Research Ctr, Children\'s Hsp. of PA.\nProfessor of Pediatrics, Univ. of PA, School of Medicine, Philadelphia\n1980-85 Assoc. Prof. of Pediatrics, Univ. of PA, School of Medicine, Philadelphia\n1979 Senior Physician, Dept. of Medicine, Children\'s Hospital of Philadelphia\n1976-79 Assoc. Physician, Dept. of Medicine, Children\'s Hospital of Philadelphia\n1975-80 Asst. Prof. of Pediatrics, University of PA, School of Medicine, Philadelphia\n1974-76 Asst. Physician, Dept. of Medicine, Children\'s Hospital of Philadelphia\nSelected Publications\n1.\n2.\n3.\n4.\n5.\n6.\n7.\n8.\nMeadows, A.T., Evans, A.E. Effects of chemotherapy on the central nervous system:\nA study of parenteral methotrexate in long-term survivors of leukemia and lymphoma\nin childhood. Cancer 37:107901085, 1976.\nD\'Angio, G.J., Meadows, A.T., Mike, V., Harris, C.C., Evans, A.W., Jaffe, N.,\nNewton, W., Schweisguth, O., Sutow, W., Morris-Jones, P. Decreased risk of\nradiation-associated second malignant neoplasms in actinomycin D-treated patients.\nCancer 37:1177-1185, 1976.\nLittman, P., Meadows, A.T., Polgar, G., Borns, P., Rubin, E. Pulmonary function\nin survivors of Wilms\' tumor: Patterns of impairment. Cancer 37:2773-2776, 1976.\nMeadows, A.T., D\'Angio, G.J., Mike, V., Banfi, A., Harris, C., Jenkin, R.D.T.,\nSchwartz, A. Patterns of second malignant neoplasms in children. Cancer 40:1903-\n1911, 1977.\nMeadows, A.T., Strong, L.C., Li, F.P., D\'Angio, G.J., Schweisguth, O., Freeman,\nA.I., Jenkin, R.D.T., Morris-Jones, P., Nesbit, M.E. Bone sarcoma as a second\nmalignant neoplasm in children: Influence of radiation and genetic predisposition.\nCancer 46:2603-2606, 1980.\nMeadows, A.T., Gordon, J., Massari, D.J., Littman, P., Fergusson, J., Moss, K.\nDeclines in IQ scores and cognitive dysfunctions in children with acute\nlymphocytic leukaemia treated with cranial irradiation. Lancet 2:1015-1018, 1981.\nCancer\nMike, V., Meadows, A.T., D\'Angio, G.J. Incidence of second malignant neoplasms in\nchildren: Results of an international study. Lancet 2:1326-1331, 1982.\nTucker, M.A., Meadows, A.T., Boice, J.D., Hoover, R.N., Fraumeni, J.F.\nrisk following treatment of childhood cancer. In Radiation Carcinogenesis:\nEpidemiological and Biological Significance, Fraumeni, J.F., & Boice, J.D. (Eds).\nRaven Press, NY pp 211-224, 1983.\n50589377\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"Education": {"description": "Model for education entries", "properties": {"institution": {"description": "Educational institution name", "title": "Institution", "type": "string"}, "degree": {"description": "Degree obtained", "title": "Degree", "type": "string"}, "graduation_year": {"anyOf": [{"type": "integer"}, {"type": "string"}, {"type": "null"}], "default": null, "description": "Year of graduation or date range", "title": "Graduation Year"}}, "required": ["institution", "degree"], "title": "Education", "type": "object"}, "WorkExperience": {"description": "Model for work experience entries", "properties": {"company": {"description": "Company name", "title": "Company", "type": "string"}, "role": {"description": "Job title/role", "title": "Role", "type": "string"}, "dates": {"description": "Employment period (e.g., \'2020-2023\' or \'Jan 2020 - Dec 2023\')", "title": "Dates", "type": "string"}}, "required": ["company", "role", "dates"], "title": "WorkExperience", "type": "object"}}, "description": "Model for resume/CV data extraction", "properties": {"full_name": {"description": "Full name of the person", "title": "Full Name", "type": "string"}, "email": {"description": "Email address", "title": "Email", "type": "string"}, "phone_number": {"description": "Phone number", "title": "Phone Number", "type": "string"}, "skills": {"description": "List of skills", "items": {"type": "string"}, "title": "Skills", "type": "array"}, "work_experience": {"description": "List of work experiences", "items": {"$ref": "#/$defs/WorkExperience"}, "title": "Work Experience", "type": "array"}, "education": {"anyOf": [{"items": {"$ref": "#/$defs/Education"}, "type": "array"}, {"type": "null"}], "default": [], "description": "List of educational background", "title": "Education"}}, "required": ["full_name", "email", "phone_number", "skills", "work_experience"]}\n```\n\nImportant notes:\n- You MUST include ALL fields in the response, even if they are empty or not found\n- If any field cannot be found, use "Not found" as the value\n- For skills, work_experience, and education, use empty arrays [] if none are found\n- For graduation_year, use the actual year (e.g., 2020) if available, or the date range as a string (e.g., "6/92-3/93") if it\'s a range\n- Extract as many skills, work experiences, and education entries as possible\n- Be precise with dates and formatting\n- Always include the education field, even if it\'s an empty array\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:19:38,770 - llm_service - ERROR - Error extracting data for resume: LLM returned empty output.
2025-06-24 15:19:38,770 - llm_service - ERROR - Raw LLM output: 
2025-06-24 15:19:38,770 - pipeline - ERROR - Error processing document documents/resumes/50589377-9378.jpg: LLM returned empty output.
2025-06-24 15:19:38,771 - pipeline - INFO - Result saved to: output/50589377-9378_result.json
2025-06-24 15:19:38,771 - __main__ - INFO - resume: 0/1 documents processed successfully
2025-06-24 15:19:38,771 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:20:22,300 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:20:22,307 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 15:20:22,308 - pipeline - INFO - Found 2 files to process in documents/resumes
2025-06-24 15:20:22,308 - pipeline - INFO - Processing document: documents/resumes/50591446-1447.jpg
2025-06-24 15:20:22,308 - pipeline - INFO - Processing document: documents/resumes/50589377-9378.jpg
2025-06-24 15:20:22,308 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:20:22,308 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:20:23,716 - pipeline - INFO - Extracted 2326 characters of text
2025-06-24 15:20:23,716 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:20:23,910 - pipeline - INFO - Extracted 2977 characters of text
2025-06-24 15:20:23,911 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:20:31,916 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:20:31,918 - pipeline - INFO - Result saved to: output/50591446-1447_result.json
2025-06-24 15:20:36,009 - llm_service - ERROR - LLM returned empty output for document type: resume
2025-06-24 15:20:36,010 - llm_service - ERROR - Prompt sent to LLM: [HumanMessage(content='You are an expert at extracting structured data from resumes/CVs.\n\nExtract the following information from the provided text:\n- Full Name: Full name of the person\n- Email: Email address\n- Phone Number: Phone number\n- Skills: List of skills mentioned\n- Work Experience: List of work experiences with company, role, and dates\n- Education: List of educational background with institution, degree, and graduation year\n\nText from document:\nMeadows, Anna T., M.D.\nProfessor of Pediatrics\n8/15/90\nQueens College, Flushing, NY\nB.A.\nNew York University, New York, NY\nMedical College of PA, Philadelphia, PA\nM.A.\n1948-52\n1952-53\nLiberal Arts\nPsychology\nM.D.\n1965-69\nMedicine\nAwards, Honors and Membership in Honorary Societies:\n1988\n1988\n1988\n1985\n1966\n1952\nClinical Cancer Investigation Review Committee, NIH\nAlumni Achievement Award, Medical College of Pennsylvania\nContinental Bank Merit Award\nAQA Honor Medical Society, Medical College of Pennsylvania\nAQA Research Award, Medical College of Pennsylvania\nPhi Beta Kappa, Queens College, Flushing, New York\nPositions Held\n1989\n1985\nDirector, Div. of Onc., & Children\'s Cancer Research Ctr, Children\'s Hsp. of PA.\nProfessor of Pediatrics, Univ. of PA, School of Medicine, Philadelphia\n1980-85 Assoc. Prof. of Pediatrics, Univ. of PA, School of Medicine, Philadelphia\n1979 Senior Physician, Dept. of Medicine, Children\'s Hospital of Philadelphia\n1976-79 Assoc. Physician, Dept. of Medicine, Children\'s Hospital of Philadelphia\n1975-80 Asst. Prof. of Pediatrics, University of PA, School of Medicine, Philadelphia\n1974-76 Asst. Physician, Dept. of Medicine, Children\'s Hospital of Philadelphia\nSelected Publications\n1.\n2.\n3.\n4.\n5.\n6.\n7.\n8.\nMeadows, A.T., Evans, A.E. Effects of chemotherapy on the central nervous system:\nA study of parenteral methotrexate in long-term survivors of leukemia and lymphoma\nin childhood. Cancer 37:107901085, 1976.\nD\'Angio, G.J., Meadows, A.T., Mike, V., Harris, C.C., Evans, A.W., Jaffe, N.,\nNewton, W., Schweisguth, O., Sutow, W., Morris-Jones, P. Decreased risk of\nradiation-associated second malignant neoplasms in actinomycin D-treated patients.\nCancer 37:1177-1185, 1976.\nLittman, P., Meadows, A.T., Polgar, G., Borns, P., Rubin, E. Pulmonary function\nin survivors of Wilms\' tumor: Patterns of impairment. Cancer 37:2773-2776, 1976.\nMeadows, A.T., D\'Angio, G.J., Mike, V., Banfi, A., Harris, C., Jenkin, R.D.T.,\nSchwartz, A. Patterns of second malignant neoplasms in children. Cancer 40:1903-\n1911, 1977.\nMeadows, A.T., Strong, L.C., Li, F.P., D\'Angio, G.J., Schweisguth, O., Freeman,\nA.I., Jenkin, R.D.T., Morris-Jones, P., Nesbit, M.E. Bone sarcoma as a second\nmalignant neoplasm in children: Influence of radiation and genetic predisposition.\nCancer 46:2603-2606, 1980.\nMeadows, A.T., Gordon, J., Massari, D.J., Littman, P., Fergusson, J., Moss, K.\nDeclines in IQ scores and cognitive dysfunctions in children with acute\nlymphocytic leukaemia treated with cranial irradiation. Lancet 2:1015-1018, 1981.\nCancer\nMike, V., Meadows, A.T., D\'Angio, G.J. Incidence of second malignant neoplasms in\nchildren: Results of an international study. Lancet 2:1326-1331, 1982.\nTucker, M.A., Meadows, A.T., Boice, J.D., Hoover, R.N., Fraumeni, J.F.\nrisk following treatment of childhood cancer. In Radiation Carcinogenesis:\nEpidemiological and Biological Significance, Fraumeni, J.F., & Boice, J.D. (Eds).\nRaven Press, NY pp 211-224, 1983.\n50589377\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"Education": {"description": "Model for education entries", "properties": {"institution": {"description": "Educational institution name", "title": "Institution", "type": "string"}, "degree": {"description": "Degree obtained", "title": "Degree", "type": "string"}, "graduation_year": {"anyOf": [{"type": "integer"}, {"type": "string"}, {"type": "null"}], "default": null, "description": "Year of graduation or date range", "title": "Graduation Year"}}, "required": ["institution", "degree"], "title": "Education", "type": "object"}, "WorkExperience": {"description": "Model for work experience entries", "properties": {"company": {"description": "Company name", "title": "Company", "type": "string"}, "role": {"description": "Job title/role", "title": "Role", "type": "string"}, "dates": {"description": "Employment period (e.g., \'2020-2023\' or \'Jan 2020 - Dec 2023\')", "title": "Dates", "type": "string"}}, "required": ["company", "role", "dates"], "title": "WorkExperience", "type": "object"}}, "description": "Model for resume/CV data extraction", "properties": {"full_name": {"description": "Full name of the person", "title": "Full Name", "type": "string"}, "email": {"description": "Email address", "title": "Email", "type": "string"}, "phone_number": {"description": "Phone number", "title": "Phone Number", "type": "string"}, "skills": {"description": "List of skills", "items": {"type": "string"}, "title": "Skills", "type": "array"}, "work_experience": {"description": "List of work experiences", "items": {"$ref": "#/$defs/WorkExperience"}, "title": "Work Experience", "type": "array"}, "education": {"anyOf": [{"items": {"$ref": "#/$defs/Education"}, "type": "array"}, {"type": "null"}], "default": [], "description": "List of educational background", "title": "Education"}}, "required": ["full_name", "email", "phone_number", "skills", "work_experience"]}\n```\n\nImportant notes:\n- You MUST include ALL fields in the response, even if they are empty or not found\n- If any field cannot be found, use "Not found" as the value\n- For skills, work_experience, and education, use empty arrays [] if none are found\n- For graduation_year, use the actual year (e.g., 2020) if available, or the date range as a string (e.g., "6/92-3/93") if it\'s a range\n- Extract as many skills, work experiences, and education entries as possible\n- Be precise with dates and formatting\n- Always include the education field, even if it\'s an empty array\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:20:36,010 - llm_service - ERROR - Error extracting data for resume: LLM returned empty output.
2025-06-24 15:20:36,011 - llm_service - ERROR - Raw LLM output: 
2025-06-24 15:20:36,011 - pipeline - ERROR - Error processing document documents/resumes/50589377-9378.jpg: LLM returned empty output.
2025-06-24 15:20:36,012 - pipeline - INFO - Result saved to: output/50589377-9378_result.json
2025-06-24 15:20:36,012 - __main__ - INFO - resume: 1/2 documents processed successfully
2025-06-24 15:20:36,012 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:21:15,109 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:21:15,117 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 15:21:15,117 - pipeline - INFO - Found 2 files to process in documents/resumes
2025-06-24 15:21:15,117 - pipeline - INFO - Processing document: documents/resumes/50589377-9378.jpg
2025-06-24 15:21:15,117 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:21:15,118 - pipeline - INFO - Processing document: documents/resumes/Piyush_Gupta_Resume.pdf
2025-06-24 15:21:15,118 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:21:16,581 - pipeline - INFO - Extracted 2977 characters of text
2025-06-24 15:21:16,581 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:21:16,894 - pipeline - INFO - Extracted 3468 characters of text
2025-06-24 15:21:16,894 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:21:22,808 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:21:22,810 - pipeline - INFO - Result saved to: output/Piyush_Gupta_Resume_result.json
2025-06-24 15:21:30,487 - llm_service - ERROR - LLM returned empty output for document type: resume
2025-06-24 15:21:30,488 - llm_service - ERROR - Prompt sent to LLM: [HumanMessage(content='You are an expert at extracting structured data from resumes/CVs.\n\nExtract the following information from the provided text:\n- Full Name: Full name of the person\n- Email: Email address\n- Phone Number: Phone number\n- Skills: List of skills mentioned\n- Work Experience: List of work experiences with company, role, and dates\n- Education: List of educational background with institution, degree, and graduation year\n\nText from document:\nMeadows, Anna T., M.D.\nProfessor of Pediatrics\n8/15/90\nQueens College, Flushing, NY\nB.A.\nNew York University, New York, NY\nMedical College of PA, Philadelphia, PA\nM.A.\n1948-52\n1952-53\nLiberal Arts\nPsychology\nM.D.\n1965-69\nMedicine\nAwards, Honors and Membership in Honorary Societies:\n1988\n1988\n1988\n1985\n1966\n1952\nClinical Cancer Investigation Review Committee, NIH\nAlumni Achievement Award, Medical College of Pennsylvania\nContinental Bank Merit Award\nAQA Honor Medical Society, Medical College of Pennsylvania\nAQA Research Award, Medical College of Pennsylvania\nPhi Beta Kappa, Queens College, Flushing, New York\nPositions Held\n1989\n1985\nDirector, Div. of Onc., & Children\'s Cancer Research Ctr, Children\'s Hsp. of PA.\nProfessor of Pediatrics, Univ. of PA, School of Medicine, Philadelphia\n1980-85 Assoc. Prof. of Pediatrics, Univ. of PA, School of Medicine, Philadelphia\n1979 Senior Physician, Dept. of Medicine, Children\'s Hospital of Philadelphia\n1976-79 Assoc. Physician, Dept. of Medicine, Children\'s Hospital of Philadelphia\n1975-80 Asst. Prof. of Pediatrics, University of PA, School of Medicine, Philadelphia\n1974-76 Asst. Physician, Dept. of Medicine, Children\'s Hospital of Philadelphia\nSelected Publications\n1.\n2.\n3.\n4.\n5.\n6.\n7.\n8.\nMeadows, A.T., Evans, A.E. Effects of chemotherapy on the central nervous system:\nA study of parenteral methotrexate in long-term survivors of leukemia and lymphoma\nin childhood. Cancer 37:107901085, 1976.\nD\'Angio, G.J., Meadows, A.T., Mike, V., Harris, C.C., Evans, A.W., Jaffe, N.,\nNewton, W., Schweisguth, O., Sutow, W., Morris-Jones, P. Decreased risk of\nradiation-associated second malignant neoplasms in actinomycin D-treated patients.\nCancer 37:1177-1185, 1976.\nLittman, P., Meadows, A.T., Polgar, G., Borns, P., Rubin, E. Pulmonary function\nin survivors of Wilms\' tumor: Patterns of impairment. Cancer 37:2773-2776, 1976.\nMeadows, A.T., D\'Angio, G.J., Mike, V., Banfi, A., Harris, C., Jenkin, R.D.T.,\nSchwartz, A. Patterns of second malignant neoplasms in children. Cancer 40:1903-\n1911, 1977.\nMeadows, A.T., Strong, L.C., Li, F.P., D\'Angio, G.J., Schweisguth, O., Freeman,\nA.I., Jenkin, R.D.T., Morris-Jones, P., Nesbit, M.E. Bone sarcoma as a second\nmalignant neoplasm in children: Influence of radiation and genetic predisposition.\nCancer 46:2603-2606, 1980.\nMeadows, A.T., Gordon, J., Massari, D.J., Littman, P., Fergusson, J., Moss, K.\nDeclines in IQ scores and cognitive dysfunctions in children with acute\nlymphocytic leukaemia treated with cranial irradiation. Lancet 2:1015-1018, 1981.\nCancer\nMike, V., Meadows, A.T., D\'Angio, G.J. Incidence of second malignant neoplasms in\nchildren: Results of an international study. Lancet 2:1326-1331, 1982.\nTucker, M.A., Meadows, A.T., Boice, J.D., Hoover, R.N., Fraumeni, J.F.\nrisk following treatment of childhood cancer. In Radiation Carcinogenesis:\nEpidemiological and Biological Significance, Fraumeni, J.F., & Boice, J.D. (Eds).\nRaven Press, NY pp 211-224, 1983.\n50589377\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"Education": {"description": "Model for education entries", "properties": {"institution": {"description": "Educational institution name", "title": "Institution", "type": "string"}, "degree": {"description": "Degree obtained", "title": "Degree", "type": "string"}, "graduation_year": {"anyOf": [{"type": "integer"}, {"type": "string"}, {"type": "null"}], "default": null, "description": "Year of graduation or date range", "title": "Graduation Year"}}, "required": ["institution", "degree"], "title": "Education", "type": "object"}, "WorkExperience": {"description": "Model for work experience entries", "properties": {"company": {"description": "Company name", "title": "Company", "type": "string"}, "role": {"description": "Job title/role", "title": "Role", "type": "string"}, "dates": {"description": "Employment period (e.g., \'2020-2023\' or \'Jan 2020 - Dec 2023\')", "title": "Dates", "type": "string"}}, "required": ["company", "role", "dates"], "title": "WorkExperience", "type": "object"}}, "description": "Model for resume/CV data extraction", "properties": {"full_name": {"description": "Full name of the person", "title": "Full Name", "type": "string"}, "email": {"description": "Email address", "title": "Email", "type": "string"}, "phone_number": {"description": "Phone number", "title": "Phone Number", "type": "string"}, "skills": {"description": "List of skills", "items": {"type": "string"}, "title": "Skills", "type": "array"}, "work_experience": {"description": "List of work experiences", "items": {"$ref": "#/$defs/WorkExperience"}, "title": "Work Experience", "type": "array"}, "education": {"anyOf": [{"items": {"$ref": "#/$defs/Education"}, "type": "array"}, {"type": "null"}], "default": [], "description": "List of educational background", "title": "Education"}}, "required": ["full_name", "email", "phone_number", "skills", "work_experience"]}\n```\n\nImportant notes:\n- You MUST include ALL fields in the response, even if they are empty or not found\n- If any field cannot be found, use "Not found" as the value\n- For skills, work_experience, and education, use empty arrays [] if none are found\n- For graduation_year, use the actual year (e.g., 2020) if available, or the date range as a string (e.g., "6/92-3/93") if it\'s a range\n- Extract as many skills, work experiences, and education entries as possible\n- Be precise with dates and formatting\n- Always include the education field, even if it\'s an empty array\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:21:30,488 - llm_service - ERROR - Error extracting data for resume: LLM returned empty output.
2025-06-24 15:21:30,488 - llm_service - ERROR - Raw LLM output: 
2025-06-24 15:21:30,488 - pipeline - ERROR - Error processing document documents/resumes/50589377-9378.jpg: LLM returned empty output.
2025-06-24 15:21:30,489 - pipeline - INFO - Result saved to: output/50589377-9378_result.json
2025-06-24 15:21:30,490 - __main__ - INFO - resume: 1/2 documents processed successfully
2025-06-24 15:21:30,490 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:22:10,606 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:22:10,613 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 15:22:10,613 - pipeline - INFO - Found 3 files to process in documents/resumes
2025-06-24 15:22:10,614 - pipeline - INFO - Processing document: documents/resumes/50586528-6531.jpg
2025-06-24 15:22:10,614 - pipeline - INFO - Processing document: documents/resumes/50618083-8085.jpg
2025-06-24 15:22:10,614 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:22:10,614 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:22:10,614 - pipeline - INFO - Processing document: documents/resumes/Piyush_Gupta_Resume.pdf
2025-06-24 15:22:10,614 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:22:11,700 - pipeline - INFO - Extracted 1203 characters of text
2025-06-24 15:22:11,701 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:22:11,819 - pipeline - INFO - Extracted 2166 characters of text
2025-06-24 15:22:11,819 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:22:12,341 - pipeline - INFO - Extracted 3468 characters of text
2025-06-24 15:22:12,341 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:22:18,106 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:22:18,107 - pipeline - INFO - Result saved to: output/Piyush_Gupta_Resume_result.json
2025-06-24 15:22:21,142 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:22:21,144 - pipeline - INFO - Result saved to: output/50618083-8085_result.json
2025-06-24 15:22:22,185 - llm_service - ERROR - LLM returned empty output for document type: resume
2025-06-24 15:22:22,186 - llm_service - ERROR - Prompt sent to LLM: [HumanMessage(content='You are an expert at extracting structured data from resumes/CVs.\n\nExtract the following information from the provided text:\n- Full Name: Full name of the person\n- Email: Email address\n- Phone Number: Phone number\n- Skills: List of skills mentioned\n- Work Experience: List of work experiences with company, role, and dates\n- Education: List of educational background with institution, degree, and graduation year\n\nText from document:\nYOAV I. HENIS\n-\nCURRICULUM VITAE\nBorn:\nFeb. 20, 1950, Tel Aviv, Israel.\nMarital Status: Married to Haya Henis, Feb. 24, 1972.\nDaughter, Sivan, born Oct. 13, 1972.\nSon, Barak Zeev, born March 25, 1978.\nACADEMIC BACKGROUND\n1968\n1968-1971\n1971-1974\n1974-1978\n1978-1981\n1981-1985\n1985-1988\n1987/88\n1988-present\nGraduated from high school, Rehovot, Israel.\nMilitary service in the Israel Defence Forces. Released as a\nLieutenant.\nB.Sc. (Chemistry and Biochemistry), Hebrew University of\nJerusalem, Jerusalem, Israel. Degree awarded CUM LAUDE.\nGraduate studies for a Ph.D. degree at the Hebrew University\nof Jerusalem. Degree awarded SUMMA CUM LAUDE. Title of thesis:\n"The Mechanism of the Allosteric and Cooperative Interactions\nin Glyceraldehyde-3-phosphate Dehydrogenase". Thesis carried\nout under the supervision of Professor Alexander Levitzki at\nthe Department of Biological Chemistry, The Institute of Life\nSciences.\nPostdoctoral training in cell membrane research employing\nbiophysical methods (fluorescence photobleaching recovery and\nvideo image-intensification microscopy) with Professor Elliot\nL. Elson, Department of Biological Chemistry, Washington\nUniversity School of Medicine, St. Louis, MO.\nLecturer at the Department of Biochemistry, Unit of Neuro-\nbiochemistry, Tel Aviv University, Tel Aviv, Israel.\nSenior Lecturer, Department of Biochemistry, Unit of Neuro-\nbiochemistry, Tel Aviv University, Tel Aviv, Israel.\nVisiting Scientist at the Whitehead Institute for Biomedical\nResearch (M.I.T.), Cambridge, MA, at the laboratory of\nProfessor Harvey F.\nLodish. Performed research on the bio-\nphysical properties of human asialoglycoprotein receptors\nexpressed in the plasma membrane of transfected cells.\nAssociate Professor, Department of Biochemistry, Unit of\nNeurobiochemistry, Tel Aviv University, Tel Aviv, Israel.\nACADEMIC POSITIONS\n1974-1978\n1978-1981\nResearch and teaching assistant at the Department of Bio-\nlogical Chemistry, Institute of Life Sciences, Hebrew\nUniversity of Jerusalem, Jerusalem, Israel.\nPostdoctoral research associate\nBiological Chemistry,\nMedicine, St. Louis, MO.\nat the Department of\nWashington University School of\n50586528\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"Education": {"description": "Model for education entries", "properties": {"institution": {"description": "Educational institution name", "title": "Institution", "type": "string"}, "degree": {"description": "Degree obtained", "title": "Degree", "type": "string"}, "graduation_year": {"anyOf": [{"type": "integer"}, {"type": "string"}, {"type": "null"}], "default": null, "description": "Year of graduation or date range", "title": "Graduation Year"}}, "required": ["institution", "degree"], "title": "Education", "type": "object"}, "WorkExperience": {"description": "Model for work experience entries", "properties": {"company": {"description": "Company name", "title": "Company", "type": "string"}, "role": {"description": "Job title/role", "title": "Role", "type": "string"}, "dates": {"description": "Employment period (e.g., \'2020-2023\' or \'Jan 2020 - Dec 2023\')", "title": "Dates", "type": "string"}}, "required": ["company", "role", "dates"], "title": "WorkExperience", "type": "object"}}, "description": "Model for resume/CV data extraction", "properties": {"full_name": {"description": "Full name of the person", "title": "Full Name", "type": "string"}, "email": {"description": "Email address", "title": "Email", "type": "string"}, "phone_number": {"description": "Phone number", "title": "Phone Number", "type": "string"}, "skills": {"description": "List of skills", "items": {"type": "string"}, "title": "Skills", "type": "array"}, "work_experience": {"description": "List of work experiences", "items": {"$ref": "#/$defs/WorkExperience"}, "title": "Work Experience", "type": "array"}, "education": {"anyOf": [{"items": {"$ref": "#/$defs/Education"}, "type": "array"}, {"type": "null"}], "default": [], "description": "List of educational background", "title": "Education"}}, "required": ["full_name", "email", "phone_number", "skills", "work_experience"]}\n```\n\nImportant notes:\n- You MUST include ALL fields in the response, even if they are empty or not found\n- If any field cannot be found, use "Not found" as the value\n- For skills, work_experience, and education, use empty arrays [] if none are found\n- For graduation_year, use the actual year (e.g., 2020) if available, or the date range as a string (e.g., "6/92-3/93") if it\'s a range\n- Extract as many skills, work experiences, and education entries as possible\n- Be precise with dates and formatting\n- Always include the education field, even if it\'s an empty array\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:22:22,186 - llm_service - ERROR - Error extracting data for resume: LLM returned empty output.
2025-06-24 15:22:22,186 - llm_service - ERROR - Raw LLM output: 
2025-06-24 15:22:22,186 - pipeline - ERROR - Error processing document documents/resumes/50586528-6531.jpg: LLM returned empty output.
2025-06-24 15:22:22,187 - pipeline - INFO - Result saved to: output/50586528-6531_result.json
2025-06-24 15:22:22,187 - __main__ - INFO - resume: 2/3 documents processed successfully
2025-06-24 15:22:22,187 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:23:31,394 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:23:31,401 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 15:23:31,402 - pipeline - INFO - Found 2 files to process in documents/resumes
2025-06-24 15:23:31,402 - pipeline - INFO - Processing document: documents/resumes/50586528-6531.jpg
2025-06-24 15:23:31,402 - pipeline - INFO - Processing document: documents/resumes/Piyush_Gupta_Resume.pdf
2025-06-24 15:23:31,402 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:23:31,402 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:23:32,848 - pipeline - INFO - Extracted 2166 characters of text
2025-06-24 15:23:32,849 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:23:33,126 - pipeline - INFO - Extracted 3468 characters of text
2025-06-24 15:23:33,126 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:23:39,311 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:23:39,312 - pipeline - INFO - Result saved to: output/Piyush_Gupta_Resume_result.json
2025-06-24 15:23:42,688 - llm_service - ERROR - LLM returned empty output for document type: resume
2025-06-24 15:23:42,688 - llm_service - ERROR - Prompt sent to LLM: [HumanMessage(content='You are an expert at extracting structured data from resumes/CVs.\n\nExtract the following information from the provided text:\n- Full Name: Full name of the person\n- Email: Email address\n- Phone Number: Phone number\n- Skills: List of skills mentioned\n- Work Experience: List of work experiences with company, role, and dates\n- Education: List of educational background with institution, degree, and graduation year\n\nText from document:\nYOAV I. HENIS\n-\nCURRICULUM VITAE\nBorn:\nFeb. 20, 1950, Tel Aviv, Israel.\nMarital Status: Married to Haya Henis, Feb. 24, 1972.\nDaughter, Sivan, born Oct. 13, 1972.\nSon, Barak Zeev, born March 25, 1978.\nACADEMIC BACKGROUND\n1968\n1968-1971\n1971-1974\n1974-1978\n1978-1981\n1981-1985\n1985-1988\n1987/88\n1988-present\nGraduated from high school, Rehovot, Israel.\nMilitary service in the Israel Defence Forces. Released as a\nLieutenant.\nB.Sc. (Chemistry and Biochemistry), Hebrew University of\nJerusalem, Jerusalem, Israel. Degree awarded CUM LAUDE.\nGraduate studies for a Ph.D. degree at the Hebrew University\nof Jerusalem. Degree awarded SUMMA CUM LAUDE. Title of thesis:\n"The Mechanism of the Allosteric and Cooperative Interactions\nin Glyceraldehyde-3-phosphate Dehydrogenase". Thesis carried\nout under the supervision of Professor Alexander Levitzki at\nthe Department of Biological Chemistry, The Institute of Life\nSciences.\nPostdoctoral training in cell membrane research employing\nbiophysical methods (fluorescence photobleaching recovery and\nvideo image-intensification microscopy) with Professor Elliot\nL. Elson, Department of Biological Chemistry, Washington\nUniversity School of Medicine, St. Louis, MO.\nLecturer at the Department of Biochemistry, Unit of Neuro-\nbiochemistry, Tel Aviv University, Tel Aviv, Israel.\nSenior Lecturer, Department of Biochemistry, Unit of Neuro-\nbiochemistry, Tel Aviv University, Tel Aviv, Israel.\nVisiting Scientist at the Whitehead Institute for Biomedical\nResearch (M.I.T.), Cambridge, MA, at the laboratory of\nProfessor Harvey F.\nLodish. Performed research on the bio-\nphysical properties of human asialoglycoprotein receptors\nexpressed in the plasma membrane of transfected cells.\nAssociate Professor, Department of Biochemistry, Unit of\nNeurobiochemistry, Tel Aviv University, Tel Aviv, Israel.\nACADEMIC POSITIONS\n1974-1978\n1978-1981\nResearch and teaching assistant at the Department of Bio-\nlogical Chemistry, Institute of Life Sciences, Hebrew\nUniversity of Jerusalem, Jerusalem, Israel.\nPostdoctoral research associate\nBiological Chemistry,\nMedicine, St. Louis, MO.\nat the Department of\nWashington University School of\n50586528\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"Education": {"description": "Model for education entries", "properties": {"institution": {"description": "Educational institution name", "title": "Institution", "type": "string"}, "degree": {"description": "Degree obtained", "title": "Degree", "type": "string"}, "graduation_year": {"anyOf": [{"type": "integer"}, {"type": "string"}, {"type": "null"}], "default": null, "description": "Year of graduation or date range", "title": "Graduation Year"}}, "required": ["institution", "degree"], "title": "Education", "type": "object"}, "WorkExperience": {"description": "Model for work experience entries", "properties": {"company": {"description": "Company name", "title": "Company", "type": "string"}, "role": {"description": "Job title/role", "title": "Role", "type": "string"}, "dates": {"description": "Employment period (e.g., \'2020-2023\' or \'Jan 2020 - Dec 2023\')", "title": "Dates", "type": "string"}}, "required": ["company", "role", "dates"], "title": "WorkExperience", "type": "object"}}, "description": "Model for resume/CV data extraction", "properties": {"full_name": {"description": "Full name of the person", "title": "Full Name", "type": "string"}, "email": {"description": "Email address", "title": "Email", "type": "string"}, "phone_number": {"description": "Phone number", "title": "Phone Number", "type": "string"}, "skills": {"description": "List of skills", "items": {"type": "string"}, "title": "Skills", "type": "array"}, "work_experience": {"description": "List of work experiences", "items": {"$ref": "#/$defs/WorkExperience"}, "title": "Work Experience", "type": "array"}, "education": {"anyOf": [{"items": {"$ref": "#/$defs/Education"}, "type": "array"}, {"type": "null"}], "default": [], "description": "List of educational background", "title": "Education"}}, "required": ["full_name", "email", "phone_number", "skills", "work_experience"]}\n```\n\nImportant notes:\n- You MUST include ALL fields in the response, even if they are empty or not found\n- If any field cannot be found, use "Not found" as the value\n- For skills, work_experience, and education, use empty arrays [] if none are found\n- For graduation_year, use the actual year (e.g., 2020) if available, or the date range as a string (e.g., "6/92-3/93") if it\'s a range\n- Extract as many skills, work experiences, and education entries as possible\n- Be precise with dates and formatting\n- Always include the education field, even if it\'s an empty array\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:23:42,689 - llm_service - ERROR - Error extracting data for resume: LLM returned empty output.
2025-06-24 15:23:42,689 - llm_service - ERROR - Raw LLM output: 
2025-06-24 15:23:42,689 - pipeline - ERROR - Error processing document documents/resumes/50586528-6531.jpg: LLM returned empty output.
2025-06-24 15:23:42,690 - pipeline - INFO - Result saved to: output/50586528-6531_result.json
2025-06-24 15:23:42,690 - __main__ - INFO - resume: 1/2 documents processed successfully
2025-06-24 15:23:42,690 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:27:28,335 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:27:28,342 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 15:27:28,343 - pipeline - INFO - Found 2 files to process in documents/resumes
2025-06-24 15:27:28,343 - pipeline - INFO - Processing document: documents/resumes/50586528-6531.jpg
2025-06-24 15:27:28,343 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:27:28,343 - pipeline - INFO - Processing document: documents/resumes/Piyush_Gupta_Resume.pdf
2025-06-24 15:27:28,343 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:27:29,580 - pipeline - INFO - Extracted 2166 characters of text
2025-06-24 15:27:29,581 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:27:29,581 - llm_service - WARNING - OCR text too long (2166 chars), truncating to 2000 chars for LLM.
2025-06-24 15:27:29,948 - pipeline - INFO - Extracted 3468 characters of text
2025-06-24 15:27:29,948 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:27:29,948 - llm_service - WARNING - OCR text too long (3468 chars), truncating to 2000 chars for LLM.
2025-06-24 15:27:37,295 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:27:37,296 - pipeline - INFO - Result saved to: output/Piyush_Gupta_Resume_result.json
2025-06-24 15:27:40,447 - llm_service - ERROR - Error extracting data for resume: Failed to parse Resume from completion {"full_name": "YOAV I. HENIS", "email": "Not found", "phone_number": "Not found", "skills": ["Biophysical methods", "Fluorescence photobleaching recovery", "Video image-intensification microscopy", "Cell membrane research"]}. Got: 1 validation error for Resume
work_experience
  Field required [type=missing, input_value={'full_name': 'YOAV I. HE...ell membrane research']}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 15:27:40,448 - llm_service - ERROR - Raw LLM output: ```json
{
  "full_name": "YOAV I. HENIS",
  "email": "Not found",
  "phone_number": "Not found",
  "skills": [
    "Biophysical methods",
    "Fluorescence photobleaching recovery",
    "Video image-intensification microscopy",
    "Cell membrane research",
2025-06-24 15:27:40,448 - pipeline - ERROR - Error processing document documents/resumes/50586528-6531.jpg: Failed to parse Resume from completion {"full_name": "YOAV I. HENIS", "email": "Not found", "phone_number": "Not found", "skills": ["Biophysical methods", "Fluorescence photobleaching recovery", "Video image-intensification microscopy", "Cell membrane research"]}. Got: 1 validation error for Resume
work_experience
  Field required [type=missing, input_value={'full_name': 'YOAV I. HE...ell membrane research']}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 15:27:40,449 - pipeline - INFO - Result saved to: output/50586528-6531_result.json
2025-06-24 15:27:40,449 - __main__ - INFO - resume: 1/2 documents processed successfully
2025-06-24 15:27:40,449 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:29:38,324 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:29:38,331 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 15:29:38,332 - pipeline - INFO - Found 2 files to process in documents/resumes
2025-06-24 15:29:38,332 - pipeline - INFO - Processing document: documents/resumes/50586528-6531.jpg
2025-06-24 15:29:38,332 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:29:38,332 - pipeline - INFO - Processing document: documents/resumes/Piyush_Gupta_Resume.pdf
2025-06-24 15:29:38,332 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:29:39,668 - pipeline - INFO - Extracted 2166 characters of text
2025-06-24 15:29:39,668 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:29:39,669 - llm_service - WARNING - OCR text too long (2166 chars), truncating to 2000 chars for LLM.
2025-06-24 15:29:39,943 - pipeline - INFO - Extracted 3468 characters of text
2025-06-24 15:29:39,943 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:29:39,943 - llm_service - WARNING - OCR text too long (3468 chars), truncating to 2000 chars for LLM.
2025-06-24 15:29:47,345 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:29:47,346 - pipeline - INFO - Result saved to: output/Piyush_Gupta_Resume_result.json
2025-06-24 15:29:50,686 - llm_service - ERROR - LLM returned empty output for document type: resume
2025-06-24 15:29:50,687 - llm_service - ERROR - Prompt sent to LLM (text length: 2000): [HumanMessage(content='You are an expert at extracting structured data from resumes/CVs.\n\nExtract the following information from the provided text:\n- Full Name: Full name of the person\n- Email: Email address\n- Phone Number: Phone number\n- Skills: List of skills mentioned\n- Work Experience: List of work experiences with company, role, and dates\n- Education: List of educational background with institution, degree, and graduation year\n\nText from document:\nYOAV I. HENIS\n-\nCURRICULUM VITAE\nBorn:\nFeb. 20, 1950, Tel Aviv, Israel.\nMarital Status: Married to Haya Henis, Feb. 24, 1972.\nDaughter, Sivan, born Oct. 13, 1972.\nSon, Barak Zeev, born March 25, 1978.\nACADEMIC BACKGROUND\n1968\n1968-1971\n1971-1974\n1974-1978\n1978-1981\n1981-1985\n1985-1988\n1987/88\n1988-present\nGraduated from high school, Rehovot, Israel.\nMilitary service in the Israel Defence Forces. Released as a\nLieutenant.\nB.Sc. (Chemistry and Biochemistry), Hebrew University of\nJerusalem, Jerusalem, Israel. Degree awarded CUM LAUDE.\nGraduate studies for a Ph.D. degree at the Hebrew University\nof Jerusalem. Degree awarded SUMMA CUM LAUDE. Title of thesis:\n"The Mechanism of the Allosteric and Cooperative Interactions\nin Glyceraldehyde-3-phosphate Dehydrogenase". Thesis carried\nout under the supervision of Professor Alexander Levitzki at\nthe Department of Biological Chemistry, The Institute of Life\nSciences.\nPostdoctoral training in cell membrane research employing\nbiophysical methods (fluorescence photobleaching recovery and\nvideo image-intensification microscopy) with Professor Elliot\nL. Elson, Department of Biological Chemistry, Washington\nUniversity School of Medicine, St. Louis, MO.\nLecturer at the Department of Biochemistry, Unit of Neuro-\nbiochemistry, Tel Aviv University, Tel Aviv, Israel.\nSenior Lecturer, Department of Biochemistry, Unit of Neuro-\nbiochemistry, Tel Aviv University, Tel Aviv, Israel.\nVisiting Scientist at the Whitehead Institute for Biomedical\nResearch (M.I.T.), Cambridge, MA, at the laboratory of\nProfessor Harvey F.\nLodish. Performed research on the bio-\nphysical properties of human asialoglycoprotein receptors\nexpressed in the plasma membrane of transfected cells.\nAssociate Professor, Department of Biochemistry, Unit of\nNeurobiochemistry, Tel Aviv University, Tel Aviv, Israel.\nACADEMIC POSITIONS\n1974-1978\n1978-1981\nResearch and teaching assistant at the Department of Bio-\nlogical Chemistry, Institute of Life Sciences, Hebrew\nUniversity of Jeru\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"Education": {"description": "Model for education entries", "properties": {"institution": {"description": "Educational institution name", "title": "Institution", "type": "string"}, "degree": {"description": "Degree obtained", "title": "Degree", "type": "string"}, "graduation_year": {"anyOf": [{"type": "integer"}, {"type": "string"}, {"type": "null"}], "default": null, "description": "Year of graduation or date range", "title": "Graduation Year"}}, "required": ["institution", "degree"], "title": "Education", "type": "object"}, "WorkExperience": {"description": "Model for work experience entries", "properties": {"company": {"description": "Company name", "title": "Company", "type": "string"}, "role": {"description": "Job title/role", "title": "Role", "type": "string"}, "dates": {"description": "Employment period (e.g., \'2020-2023\' or \'Jan 2020 - Dec 2023\')", "title": "Dates", "type": "string"}}, "required": ["company", "role", "dates"], "title": "WorkExperience", "type": "object"}}, "description": "Model for resume/CV data extraction", "properties": {"full_name": {"description": "Full name of the person", "title": "Full Name", "type": "string"}, "email": {"description": "Email address", "title": "Email", "type": "string"}, "phone_number": {"description": "Phone number", "title": "Phone Number", "type": "string"}, "skills": {"description": "List of skills", "items": {"type": "string"}, "title": "Skills", "type": "array"}, "work_experience": {"description": "List of work experiences", "items": {"$ref": "#/$defs/WorkExperience"}, "title": "Work Experience", "type": "array"}, "education": {"anyOf": [{"items": {"$ref": "#/$defs/Education"}, "type": "array"}, {"type": "null"}], "description": "List of educational background", "title": "Education"}}, "required": ["full_name", "email", "phone_number"]}\n```\n\nImportant notes:\n- You MUST include ALL fields in the response, even if they are empty or not found\n- If any field cannot be found, use "Not found" as the value\n- For skills, work_experience, and education, use empty arrays [] if none are found\n- For graduation_year, use the actual year (e.g., 2020) if available, or the date range as a string (e.g., "6/92-3/93") if it\'s a range\n- Extract as many skills, work experiences, and education entries as possible\n- Be precise with dates and formatting\n- Always include the education, skills, and work_experience fields, even if they are empty arrays\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:29:50,688 - llm_service - WARNING - Retrying LLM with half the text length.
2025-06-24 15:30:03,114 - llm_service - ERROR - LLM returned empty output for document type: resume
2025-06-24 15:30:03,114 - llm_service - ERROR - Prompt sent to LLM (text length: 1000): [HumanMessage(content='You are an expert at extracting structured data from resumes/CVs.\n\nExtract the following information from the provided text:\n- Full Name: Full name of the person\n- Email: Email address\n- Phone Number: Phone number\n- Skills: List of skills mentioned\n- Work Experience: List of work experiences with company, role, and dates\n- Education: List of educational background with institution, degree, and graduation year\n\nText from document:\nYOAV I. HENIS\n-\nCURRICULUM VITAE\nBorn:\nFeb. 20, 1950, Tel Aviv, Israel.\nMarital Status: Married to Haya Henis, Feb. 24, 1972.\nDaughter, Sivan, born Oct. 13, 1972.\nSon, Barak Zeev, born March 25, 1978.\nACADEMIC BACKGROUND\n1968\n1968-1971\n1971-1974\n1974-1978\n1978-1981\n1981-1985\n1985-1988\n1987/88\n1988-present\nGraduated from high school, Rehovot, Israel.\nMilitary service in the Israel Defence Forces. Released as a\nLieutenant.\nB.Sc. (Chemistry and Biochemistry), Hebrew University of\nJerusalem, Jerusalem, Israel. Degree awarded CUM LAUDE.\nGraduate studies for a Ph.D. degree at the Hebrew University\nof Jerusalem. Degree awarded SUMMA CUM LAUDE. Title of thesis:\n"The Mechanism of the Allosteric and Cooperative Interactions\nin Glyceraldehyde-3-phosphate Dehydrogenase". Thesis carried\nout under the supervision of Professor Alexander Levitzki at\nthe Department of Biological Chemistry, The Institute of Life\nSciences.\nPostdoctoral training in cell membrane research employing\nbiophysical methods (flu\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"Education": {"description": "Model for education entries", "properties": {"institution": {"description": "Educational institution name", "title": "Institution", "type": "string"}, "degree": {"description": "Degree obtained", "title": "Degree", "type": "string"}, "graduation_year": {"anyOf": [{"type": "integer"}, {"type": "string"}, {"type": "null"}], "default": null, "description": "Year of graduation or date range", "title": "Graduation Year"}}, "required": ["institution", "degree"], "title": "Education", "type": "object"}, "WorkExperience": {"description": "Model for work experience entries", "properties": {"company": {"description": "Company name", "title": "Company", "type": "string"}, "role": {"description": "Job title/role", "title": "Role", "type": "string"}, "dates": {"description": "Employment period (e.g., \'2020-2023\' or \'Jan 2020 - Dec 2023\')", "title": "Dates", "type": "string"}}, "required": ["company", "role", "dates"], "title": "WorkExperience", "type": "object"}}, "description": "Model for resume/CV data extraction", "properties": {"full_name": {"description": "Full name of the person", "title": "Full Name", "type": "string"}, "email": {"description": "Email address", "title": "Email", "type": "string"}, "phone_number": {"description": "Phone number", "title": "Phone Number", "type": "string"}, "skills": {"description": "List of skills", "items": {"type": "string"}, "title": "Skills", "type": "array"}, "work_experience": {"description": "List of work experiences", "items": {"$ref": "#/$defs/WorkExperience"}, "title": "Work Experience", "type": "array"}, "education": {"anyOf": [{"items": {"$ref": "#/$defs/Education"}, "type": "array"}, {"type": "null"}], "description": "List of educational background", "title": "Education"}}, "required": ["full_name", "email", "phone_number"]}\n```\n\nImportant notes:\n- You MUST include ALL fields in the response, even if they are empty or not found\n- If any field cannot be found, use "Not found" as the value\n- For skills, work_experience, and education, use empty arrays [] if none are found\n- For graduation_year, use the actual year (e.g., 2020) if available, or the date range as a string (e.g., "6/92-3/93") if it\'s a range\n- Extract as many skills, work experiences, and education entries as possible\n- Be precise with dates and formatting\n- Always include the education, skills, and work_experience fields, even if they are empty arrays\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:30:03,115 - llm_service - WARNING - Retrying LLM with half the text length.
2025-06-24 15:30:07,601 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:30:07,603 - pipeline - INFO - Result saved to: output/50586528-6531_result.json
2025-06-24 15:30:07,603 - __main__ - INFO - resume: 2/2 documents processed successfully
2025-06-24 15:30:07,603 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:32:12,056 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:32:12,063 - __main__ - INFO - Processing driving_license documents from: documents/driving_license
2025-06-24 15:32:12,064 - pipeline - INFO - Found 3 files to process in documents/driving_license
2025-06-24 15:32:12,064 - pipeline - INFO - Processing document: documents/driving_license/generated_license_1099.png
2025-06-24 15:32:12,064 - pipeline - INFO - Processing document: documents/driving_license/generated_license_10.png
2025-06-24 15:32:12,064 - pipeline - INFO - Processing document: documents/driving_license/generated_license_0.png
2025-06-24 15:32:12,064 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:32:12,064 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:32:12,064 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:32:14,190 - pipeline - INFO - Extracted 800 characters of text
2025-06-24 15:32:14,191 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:32:14,205 - pipeline - INFO - Extracted 794 characters of text
2025-06-24 15:32:14,206 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:32:14,291 - pipeline - INFO - Extracted 771 characters of text
2025-06-24 15:32:14,291 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:32:19,193 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:32:19,194 - pipeline - INFO - Result saved to: output/generated_license_10_result.json
2025-06-24 15:32:20,129 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:32:20,130 - pipeline - INFO - Result saved to: output/generated_license_0_result.json
2025-06-24 15:32:21,394 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:32:21,396 - pipeline - INFO - Result saved to: output/generated_license_1099_result.json
2025-06-24 15:32:21,396 - __main__ - INFO - driving_license: 3/3 documents processed successfully
2025-06-24 15:32:21,396 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:34:59,176 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:34:59,183 - __main__ - INFO - Processing shop_receipt documents from: documents/shop_receipts
2025-06-24 15:34:59,183 - pipeline - INFO - Found 3 files to process in documents/shop_receipts
2025-06-24 15:34:59,184 - pipeline - INFO - Processing document: documents/shop_receipts/12.jpg
2025-06-24 15:34:59,184 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:34:59,184 - pipeline - INFO - Processing document: documents/shop_receipts/2.jpg
2025-06-24 15:34:59,184 - pipeline - INFO - Processing document: documents/shop_receipts/1.jpg
2025-06-24 15:34:59,184 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:34:59,184 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:35:00,182 - pipeline - INFO - Extracted 770 characters of text
2025-06-24 15:35:00,182 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:35:00,408 - pipeline - INFO - Extracted 555 characters of text
2025-06-24 15:35:00,408 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:35:00,862 - pipeline - INFO - Extracted 819 characters of text
2025-06-24 15:35:00,863 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:35:06,533 - llm_service - ERROR - Error extracting data for shop_receipt: Failed to parse ShopReceipt from completion null. Got: 1 validation error for ShopReceipt
  Input should be a valid dictionary or instance of ShopReceipt [type=model_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.10/v/model_type
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 15:35:06,534 - llm_service - ERROR - Raw LLM output: ```json
{
  "merchant_name": "Walmart.com",
  "total_amount": 49.90,
  "date_of_purchase": "2020-10-18",
  "items": [
    {
      "name": "GV OATMEAL",
      "quantity": 1,
      "price": 1.76
    ,
    {
      "name": "OT 200Z TUM",
      "quantity": 1,
      "price": 6.74
    },
    {
      "name": "M ATHLETICS",
      "quantity": 1,
      "price": 24.97
    },
    {
      "name": "DEXAS 15X20",
      "quantity": 1,
      "price": 12.97
    }
  ],
  "payment_method": "DEBIT"
}
```
2025-06-24 15:35:06,534 - pipeline - ERROR - Error processing document documents/shop_receipts/2.jpg: Failed to parse ShopReceipt from completion null. Got: 1 validation error for ShopReceipt
  Input should be a valid dictionary or instance of ShopReceipt [type=model_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.10/v/model_type
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 15:35:06,535 - pipeline - INFO - Result saved to: output/2_result.json
2025-06-24 15:35:09,282 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:35:09,284 - pipeline - INFO - Result saved to: output/12_result.json
2025-06-24 15:35:12,049 - llm_service - ERROR - LLM returned empty output for document type: shop_receipt
2025-06-24 15:35:12,050 - llm_service - ERROR - Prompt sent to LLM (text length: 819): [HumanMessage(content='You are an expert at extracting structured data from shop receipts.\n\nExtract the following information from the provided text:\n- Merchant Name: Name of the merchant/store\n- Total Amount: Total amount of the purchase (numeric value)\n- Date of Purchase: Date of purchase in YYYY-MM-DD format\n- Items: List of items with name, quantity, and price\n- Payment Method: Payment method used\n\nText from document:\nTRADER JOE\'S\n2001 Greenville Ave\nDallas TX 75206\nStore #403\n(469) 334-0614\nOPEN 8:00AM TO 9:00PM DAILY\nR-CARROTS SHREDDED 10 OZ\n1.29\nR-CUCUMBERS PERSIAN 1 LB\n1.99\nTOMATOES CRUSHED NO SALT\n1.59\nTOMATOES WHOLE NO SALT W/BASIL\n1.59\nORGANIC OLD FASHIONED OATMEAL\n2.69\nMINI-PEARL TOMATOES..\n2.49\nPKG SHREDDED MOZZARELLA LITE T 3.99\nEGGS 1 DOZ ORGANIC BROWN.\n3.79\nBEANS GARBANZO\n0.89\nSPROUTED CA STYLE\n2.99\nA-AVOCADOS HASS BAG 4CT\n3.99\nA-APPLE BAG JAZZ 2 LB\n2.99\nA-PEPPER BELL EACH XL RED\n0.99\nGROCERY NON TAXABLE\n0.98\n2 @ 0.49\nBANANAS ORGANIC\n0.87\n3EA @ 0.29/EA\nCREAMY SALTED PEANUT BUTTER\n2.49\nWHL WHT PITA BREAD\n1.69\nGROCERY NON TAXABLE\n1.38\n2 @ 0.69\nSUBTOTAL\n$38.68\nTOTAL\nCASH\nCHANGE\nITEMS 22\n$38.68\n$40.00\n$1.32\nHiggins, Ryan\n06-28-2014 12:34PM 0403 04 1346 4683\nTHANK YOU FOR SHOPPING AT\nTRADER JOE\'S\nwww.traderjoes.com\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"ReceiptItem": {"description": "Model for individual items in a receipt", "properties": {"name": {"description": "Name of the item", "title": "Name", "type": "string"}, "quantity": {"anyOf": [{"type": "integer"}, {"type": "number"}], "description": "Quantity purchased (can be decimal for items sold by weight)", "title": "Quantity"}, "price": {"description": "Price per item", "title": "Price", "type": "number"}}, "required": ["name", "quantity", "price"], "title": "ReceiptItem", "type": "object"}}, "description": "Model for shop receipt data extraction", "properties": {"merchant_name": {"description": "Name of the merchant/store", "title": "Merchant Name", "type": "string"}, "total_amount": {"description": "Total amount of the purchase", "title": "Total Amount", "type": "number"}, "date_of_purchase": {"description": "Date of purchase in YYYY-MM-DD format", "title": "Date Of Purchase", "type": "string"}, "items": {"description": "List of items purchased", "items": {"$ref": "#/$defs/ReceiptItem"}, "title": "Items", "type": "array"}, "payment_method": {"description": "Payment method used", "title": "Payment Method", "type": "string"}}, "required": ["merchant_name", "total_amount", "date_of_purchase", "items", "payment_method"]}\n```\n\nImportant notes:\n- If any field cannot be found, use "Not found" as the value\n- For items, extract as many as you can identify\n- Quantity can be decimal (e.g., 2.5 lbs, 0.5 kg) for items sold by weight\n- Use the exact quantity as shown on the receipt, whether it\'s whole numbers or decimals\n- Price should be the price per unit/item\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:35:12,050 - llm_service - WARNING - Retrying LLM with half the text length.
2025-06-24 15:35:20,875 - llm_service - ERROR - Error extracting data for shop_receipt: Failed to parse ShopReceipt from completion {"merchant_name": "TRADER JOE'S", "total_amount": "Not found", "date_of_purchase": "Not found", "items": [{"name": "R-CARROTS SHREDDED 10 OZ", "quantity": 1, "price": 1.29}, {"name": "R-CUCUMBERS PERSIAN 1 LB", "quantity": 1, "price": 1.99}, {"name": "TOMATOES CRUSHED NO SALT", "quantity": 1, "price": 1.59}, {"name": "TOMATOES WHOLE NO SALT W/BASIL", "quantity": 1, "price": 1.59}, {"name": "ORGANIC OLD FASHIONED OATMEAL", "quantity": 1, "price": 2.69}, {"name": "MINI-PEARL TOMATOES..", "quantity": 1, "price": 2.49}, {"name": "PKG SHREDDED MOZZARELLA LITE T", "quantity": 1, "price": 3.99}, {"name": "EGGS 1 DOZ ORGANIC BROWN.", "quantity": 1, "price": 3.79}, {"name": "BEANS GARBANZO", "quantity": 1, "price": 0.89}, {"name": "SPROUTED CA STYLE", "quantity": 1, "price": 2.99}], "payment_method": "Not found"}. Got: 1 validation error for ShopReceipt
total_amount
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='Not found', input_type=str]
    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 15:35:20,875 - llm_service - ERROR - Raw LLM output: ```json
{
  "merchant_name": "TRADER JOE'S",
  "total_amount": "Not found",
  "date_of_purchase": "Not found",
  "items": [
    {
      "name": "R-CARROTS SHREDDED 10 OZ",
      "quantity": 1,
      "price": 1.29
    },
    {
      "name": "R-CUCUMBERS PERSIAN 1 LB",
      "quantity": 1,
      "price": 1.99
    },
    {
      "name": "TOMATOES CRUSHED NO SALT",
      "quantity": 1,
      "price": 1.59
    },
    {
      "name": "TOMATOES WHOLE NO SALT W/BASIL",
      "quantity": 1,
      "price": 1.59
    },
    {
      "name": "ORGANIC OLD FASHIONED OATMEAL",
      "quantity": 1,
      "price": 2.69
    },
    {
      "name": "MINI-PEARL TOMATOES..",
      "quantity": 1,
      "price": 2.49
    },
    {
      "name": "PKG SHREDDED MOZZARELLA LITE T",
      "quantity": 1,
      "price": 3.99
    },
    {
      "name": "EGGS 1 DOZ ORGANIC BROWN.",
      "quantity": 1,
      "price": 3.79
    },
    {
      "name": "BEANS GARBANZO",
      "quantity": 1,
      "price": 0.89
    },
    {
      "name": "SPROUTED CA STYLE",
      "quantity": 1,
      "price": 2.99
    }
  ],
  "payment_method": "Not found"
}
```
2025-06-24 15:35:20,876 - llm_service - ERROR - Error extracting data for shop_receipt: Failed to parse ShopReceipt from completion {"merchant_name": "TRADER JOE'S", "total_amount": "Not found", "date_of_purchase": "Not found", "items": [{"name": "R-CARROTS SHREDDED 10 OZ", "quantity": 1, "price": 1.29}, {"name": "R-CUCUMBERS PERSIAN 1 LB", "quantity": 1, "price": 1.99}, {"name": "TOMATOES CRUSHED NO SALT", "quantity": 1, "price": 1.59}, {"name": "TOMATOES WHOLE NO SALT W/BASIL", "quantity": 1, "price": 1.59}, {"name": "ORGANIC OLD FASHIONED OATMEAL", "quantity": 1, "price": 2.69}, {"name": "MINI-PEARL TOMATOES..", "quantity": 1, "price": 2.49}, {"name": "PKG SHREDDED MOZZARELLA LITE T", "quantity": 1, "price": 3.99}, {"name": "EGGS 1 DOZ ORGANIC BROWN.", "quantity": 1, "price": 3.79}, {"name": "BEANS GARBANZO", "quantity": 1, "price": 0.89}, {"name": "SPROUTED CA STYLE", "quantity": 1, "price": 2.99}], "payment_method": "Not found"}. Got: 1 validation error for ShopReceipt
total_amount
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='Not found', input_type=str]
    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 15:35:20,876 - llm_service - ERROR - Raw LLM output: 
2025-06-24 15:35:20,876 - pipeline - ERROR - Error processing document documents/shop_receipts/1.jpg: Failed to parse ShopReceipt from completion {"merchant_name": "TRADER JOE'S", "total_amount": "Not found", "date_of_purchase": "Not found", "items": [{"name": "R-CARROTS SHREDDED 10 OZ", "quantity": 1, "price": 1.29}, {"name": "R-CUCUMBERS PERSIAN 1 LB", "quantity": 1, "price": 1.99}, {"name": "TOMATOES CRUSHED NO SALT", "quantity": 1, "price": 1.59}, {"name": "TOMATOES WHOLE NO SALT W/BASIL", "quantity": 1, "price": 1.59}, {"name": "ORGANIC OLD FASHIONED OATMEAL", "quantity": 1, "price": 2.69}, {"name": "MINI-PEARL TOMATOES..", "quantity": 1, "price": 2.49}, {"name": "PKG SHREDDED MOZZARELLA LITE T", "quantity": 1, "price": 3.99}, {"name": "EGGS 1 DOZ ORGANIC BROWN.", "quantity": 1, "price": 3.79}, {"name": "BEANS GARBANZO", "quantity": 1, "price": 0.89}, {"name": "SPROUTED CA STYLE", "quantity": 1, "price": 2.99}], "payment_method": "Not found"}. Got: 1 validation error for ShopReceipt
total_amount
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='Not found', input_type=str]
    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-06-24 15:35:20,877 - pipeline - INFO - Result saved to: output/1_result.json
2025-06-24 15:35:20,877 - __main__ - INFO - shop_receipt: 1/3 documents processed successfully
2025-06-24 15:35:20,877 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:36:40,550 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:36:40,558 - __main__ - INFO - Processing shop_receipt documents from: documents/shop_receipts
2025-06-24 15:36:40,558 - pipeline - INFO - Found 3 files to process in documents/shop_receipts
2025-06-24 15:36:40,558 - pipeline - INFO - Processing document: documents/shop_receipts/12.jpg
2025-06-24 15:36:40,558 - pipeline - INFO - Processing document: documents/shop_receipts/2.jpg
2025-06-24 15:36:40,558 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:36:40,558 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:36:40,558 - pipeline - INFO - Processing document: documents/shop_receipts/1.jpg
2025-06-24 15:36:40,559 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:36:41,448 - pipeline - INFO - Extracted 770 characters of text
2025-06-24 15:36:41,448 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:36:41,748 - pipeline - INFO - Extracted 555 characters of text
2025-06-24 15:36:41,748 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:36:41,923 - pipeline - INFO - Extracted 819 characters of text
2025-06-24 15:36:41,923 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:36:48,359 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:36:48,361 - pipeline - INFO - Result saved to: output/12_result.json
2025-06-24 15:36:48,396 - pipeline - INFO - Document processing completed successfully
2025-06-24 15:36:48,397 - pipeline - INFO - Result saved to: output/2_result.json
2025-06-24 15:36:55,795 - llm_service - ERROR - LLM returned empty output for document type: shop_receipt
2025-06-24 15:36:55,796 - llm_service - ERROR - Prompt sent to LLM (text length: 819): [HumanMessage(content='You are an expert at extracting structured data from shop receipts.\n\nExtract the following information from the provided text:\n- Merchant Name: Name of the merchant/store\n- Total Amount: Total amount of the purchase (numeric value)\n- Date of Purchase: Date of purchase in YYYY-MM-DD format\n- Items: List of items with name, quantity, and price\n- Payment Method: Payment method used\n\nText from document:\nTRADER JOE\'S\n2001 Greenville Ave\nDallas TX 75206\nStore #403\n(469) 334-0614\nOPEN 8:00AM TO 9:00PM DAILY\nR-CARROTS SHREDDED 10 OZ\n1.29\nR-CUCUMBERS PERSIAN 1 LB\n1.99\nTOMATOES CRUSHED NO SALT\n1.59\nTOMATOES WHOLE NO SALT W/BASIL\n1.59\nORGANIC OLD FASHIONED OATMEAL\n2.69\nMINI-PEARL TOMATOES..\n2.49\nPKG SHREDDED MOZZARELLA LITE T 3.99\nEGGS 1 DOZ ORGANIC BROWN.\n3.79\nBEANS GARBANZO\n0.89\nSPROUTED CA STYLE\n2.99\nA-AVOCADOS HASS BAG 4CT\n3.99\nA-APPLE BAG JAZZ 2 LB\n2.99\nA-PEPPER BELL EACH XL RED\n0.99\nGROCERY NON TAXABLE\n0.98\n2 @ 0.49\nBANANAS ORGANIC\n0.87\n3EA @ 0.29/EA\nCREAMY SALTED PEANUT BUTTER\n2.49\nWHL WHT PITA BREAD\n1.69\nGROCERY NON TAXABLE\n1.38\n2 @ 0.69\nSUBTOTAL\n$38.68\nTOTAL\nCASH\nCHANGE\nITEMS 22\n$38.68\n$40.00\n$1.32\nHiggins, Ryan\n06-28-2014 12:34PM 0403 04 1346 4683\nTHANK YOU FOR SHOPPING AT\nTRADER JOE\'S\nwww.traderjoes.com\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"ReceiptItem": {"description": "Model for individual items in a receipt", "properties": {"name": {"description": "Name of the item", "title": "Name", "type": "string"}, "quantity": {"anyOf": [{"type": "integer"}, {"type": "number"}], "description": "Quantity purchased (can be decimal for items sold by weight)", "title": "Quantity"}, "price": {"description": "Price per item", "title": "Price", "type": "number"}}, "required": ["name", "quantity", "price"], "title": "ReceiptItem", "type": "object"}}, "description": "Model for shop receipt data extraction", "properties": {"merchant_name": {"description": "Name of the merchant/store", "title": "Merchant Name", "type": "string"}, "total_amount": {"description": "Total amount of the purchase", "title": "Total Amount", "type": "number"}, "date_of_purchase": {"description": "Date of purchase in YYYY-MM-DD format", "title": "Date Of Purchase", "type": "string"}, "items": {"description": "List of items purchased", "items": {"$ref": "#/$defs/ReceiptItem"}, "title": "Items", "type": "array"}, "payment_method": {"description": "Payment method used", "title": "Payment Method", "type": "string"}}, "required": ["merchant_name", "total_amount", "date_of_purchase", "items", "payment_method"]}\n```\n\nImportant notes:\n- For numeric fields (total_amount, price, quantity), if the value cannot be found, use 0.\n- For all other fields, use "Not found" if the value cannot be found.\n- For items, extract as many as you can identify\n- Quantity can be decimal (e.g., 2.5 lbs, 0.5 kg) for items sold by weight\n- Use the exact quantity as shown on the receipt, whether it\'s whole numbers or decimals\n- Price should be the price per unit/item\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:36:55,796 - llm_service - WARNING - Retrying LLM with half the text length.
2025-06-24 15:37:04,805 - llm_service - ERROR - LLM returned empty output for document type: shop_receipt
2025-06-24 15:37:04,806 - llm_service - ERROR - Prompt sent to LLM (text length: 409): [HumanMessage(content='You are an expert at extracting structured data from shop receipts.\n\nExtract the following information from the provided text:\n- Merchant Name: Name of the merchant/store\n- Total Amount: Total amount of the purchase (numeric value)\n- Date of Purchase: Date of purchase in YYYY-MM-DD format\n- Items: List of items with name, quantity, and price\n- Payment Method: Payment method used\n\nText from document:\nTRADER JOE\'S\n2001 Greenville Ave\nDallas TX 75206\nStore #403\n(469) 334-0614\nOPEN 8:00AM TO 9:00PM DAILY\nR-CARROTS SHREDDED 10 OZ\n1.29\nR-CUCUMBERS PERSIAN 1 LB\n1.99\nTOMATOES CRUSHED NO SALT\n1.59\nTOMATOES WHOLE NO SALT W/BASIL\n1.59\nORGANIC OLD FASHIONED OATMEAL\n2.69\nMINI-PEARL TOMATOES..\n2.49\nPKG SHREDDED MOZZARELLA LITE T 3.99\nEGGS 1 DOZ ORGANIC BROWN.\n3.79\nBEANS GARBANZO\n0.89\nSPROUTED CA STYLE\n2.99\nA-AVOCAD\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"ReceiptItem": {"description": "Model for individual items in a receipt", "properties": {"name": {"description": "Name of the item", "title": "Name", "type": "string"}, "quantity": {"anyOf": [{"type": "integer"}, {"type": "number"}], "description": "Quantity purchased (can be decimal for items sold by weight)", "title": "Quantity"}, "price": {"description": "Price per item", "title": "Price", "type": "number"}}, "required": ["name", "quantity", "price"], "title": "ReceiptItem", "type": "object"}}, "description": "Model for shop receipt data extraction", "properties": {"merchant_name": {"description": "Name of the merchant/store", "title": "Merchant Name", "type": "string"}, "total_amount": {"description": "Total amount of the purchase", "title": "Total Amount", "type": "number"}, "date_of_purchase": {"description": "Date of purchase in YYYY-MM-DD format", "title": "Date Of Purchase", "type": "string"}, "items": {"description": "List of items purchased", "items": {"$ref": "#/$defs/ReceiptItem"}, "title": "Items", "type": "array"}, "payment_method": {"description": "Payment method used", "title": "Payment Method", "type": "string"}}, "required": ["merchant_name", "total_amount", "date_of_purchase", "items", "payment_method"]}\n```\n\nImportant notes:\n- For numeric fields (total_amount, price, quantity), if the value cannot be found, use 0.\n- For all other fields, use "Not found" if the value cannot be found.\n- For items, extract as many as you can identify\n- Quantity can be decimal (e.g., 2.5 lbs, 0.5 kg) for items sold by weight\n- Use the exact quantity as shown on the receipt, whether it\'s whole numbers or decimals\n- Price should be the price per unit/item\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:37:04,806 - llm_service - ERROR - Error extracting data for shop_receipt: LLM returned empty output.
2025-06-24 15:37:04,807 - llm_service - ERROR - Raw LLM output: 
2025-06-24 15:37:04,807 - llm_service - ERROR - Error extracting data for shop_receipt: LLM returned empty output.
2025-06-24 15:37:04,807 - llm_service - ERROR - Raw LLM output: 
2025-06-24 15:37:04,807 - pipeline - ERROR - Error processing document documents/shop_receipts/1.jpg: LLM returned empty output.
2025-06-24 15:37:04,808 - pipeline - INFO - Result saved to: output/1_result.json
2025-06-24 15:37:04,808 - __main__ - INFO - shop_receipt: 2/3 documents processed successfully
2025-06-24 15:37:04,809 - __main__ - INFO - Pipeline execution completed
2025-06-24 15:38:23,978 - __main__ - INFO - Configuration validated successfully
2025-06-24 15:38:23,987 - __main__ - INFO - Processing shop_receipt documents from: documents/shop_receipts
2025-06-24 15:38:23,987 - pipeline - INFO - Found 1 files to process in documents/shop_receipts
2025-06-24 15:38:23,987 - pipeline - INFO - Processing document: documents/shop_receipts/1.jpg
2025-06-24 15:38:23,987 - pipeline - INFO - Extracting text using OCR...
2025-06-24 15:38:25,249 - pipeline - INFO - Extracted 819 characters of text
2025-06-24 15:38:25,250 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 15:38:37,689 - llm_service - ERROR - LLM returned empty output for document type: shop_receipt
2025-06-24 15:38:37,690 - llm_service - ERROR - Prompt sent to LLM (text length: 819): [HumanMessage(content='You are an expert at extracting structured data from shop receipts.\n\nExtract the following information from the provided text:\n- Merchant Name: Name of the merchant/store\n- Total Amount: Total amount of the purchase (numeric value)\n- Date of Purchase: Date of purchase in YYYY-MM-DD format\n- Items: List of items with name, quantity, and price\n- Payment Method: Payment method used\n\nText from document:\nTRADER JOE\'S\n2001 Greenville Ave\nDallas TX 75206\nStore #403\n(469) 334-0614\nOPEN 8:00AM TO 9:00PM DAILY\nR-CARROTS SHREDDED 10 OZ\n1.29\nR-CUCUMBERS PERSIAN 1 LB\n1.99\nTOMATOES CRUSHED NO SALT\n1.59\nTOMATOES WHOLE NO SALT W/BASIL\n1.59\nORGANIC OLD FASHIONED OATMEAL\n2.69\nMINI-PEARL TOMATOES..\n2.49\nPKG SHREDDED MOZZARELLA LITE T 3.99\nEGGS 1 DOZ ORGANIC BROWN.\n3.79\nBEANS GARBANZO\n0.89\nSPROUTED CA STYLE\n2.99\nA-AVOCADOS HASS BAG 4CT\n3.99\nA-APPLE BAG JAZZ 2 LB\n2.99\nA-PEPPER BELL EACH XL RED\n0.99\nGROCERY NON TAXABLE\n0.98\n2 @ 0.49\nBANANAS ORGANIC\n0.87\n3EA @ 0.29/EA\nCREAMY SALTED PEANUT BUTTER\n2.49\nWHL WHT PITA BREAD\n1.69\nGROCERY NON TAXABLE\n1.38\n2 @ 0.69\nSUBTOTAL\n$38.68\nTOTAL\nCASH\nCHANGE\nITEMS 22\n$38.68\n$40.00\n$1.32\nHiggins, Ryan\n06-28-2014 12:34PM 0403 04 1346 4683\nTHANK YOU FOR SHOPPING AT\nTRADER JOE\'S\nwww.traderjoes.com\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"ReceiptItem": {"description": "Model for individual items in a receipt", "properties": {"name": {"description": "Name of the item", "title": "Name", "type": "string"}, "quantity": {"anyOf": [{"type": "integer"}, {"type": "number"}], "description": "Quantity purchased (can be decimal for items sold by weight)", "title": "Quantity"}, "price": {"description": "Price per item", "title": "Price", "type": "number"}}, "required": ["name", "quantity", "price"], "title": "ReceiptItem", "type": "object"}}, "description": "Model for shop receipt data extraction", "properties": {"merchant_name": {"description": "Name of the merchant/store", "title": "Merchant Name", "type": "string"}, "total_amount": {"description": "Total amount of the purchase", "title": "Total Amount", "type": "number"}, "date_of_purchase": {"description": "Date of purchase in YYYY-MM-DD format", "title": "Date Of Purchase", "type": "string"}, "items": {"description": "List of items purchased", "items": {"$ref": "#/$defs/ReceiptItem"}, "title": "Items", "type": "array"}, "payment_method": {"description": "Payment method used", "title": "Payment Method", "type": "string"}}, "required": ["merchant_name", "total_amount", "date_of_purchase", "items", "payment_method"]}\n```\n\nImportant notes:\n- For numeric fields (total_amount, price, quantity), if the value cannot be found, use 0.\n- For all other fields, use "Not found" if the value cannot be found.\n- For items, extract as many as you can identify\n- Quantity can be decimal (e.g., 2.5 lbs, 0.5 kg) for items sold by weight\n- Use the exact quantity as shown on the receipt, whether it\'s whole numbers or decimals\n- Price should be the price per unit/item\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:38:37,690 - llm_service - WARNING - Retrying LLM with half the text length.
2025-06-24 15:38:47,670 - llm_service - ERROR - LLM returned empty output for document type: shop_receipt
2025-06-24 15:38:47,670 - llm_service - ERROR - Prompt sent to LLM (text length: 409): [HumanMessage(content='You are an expert at extracting structured data from shop receipts.\n\nExtract the following information from the provided text:\n- Merchant Name: Name of the merchant/store\n- Total Amount: Total amount of the purchase (numeric value)\n- Date of Purchase: Date of purchase in YYYY-MM-DD format\n- Items: List of items with name, quantity, and price\n- Payment Method: Payment method used\n\nText from document:\nTRADER JOE\'S\n2001 Greenville Ave\nDallas TX 75206\nStore #403\n(469) 334-0614\nOPEN 8:00AM TO 9:00PM DAILY\nR-CARROTS SHREDDED 10 OZ\n1.29\nR-CUCUMBERS PERSIAN 1 LB\n1.99\nTOMATOES CRUSHED NO SALT\n1.59\nTOMATOES WHOLE NO SALT W/BASIL\n1.59\nORGANIC OLD FASHIONED OATMEAL\n2.69\nMINI-PEARL TOMATOES..\n2.49\nPKG SHREDDED MOZZARELLA LITE T 3.99\nEGGS 1 DOZ ORGANIC BROWN.\n3.79\nBEANS GARBANZO\n0.89\nSPROUTED CA STYLE\n2.99\nA-AVOCAD\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"ReceiptItem": {"description": "Model for individual items in a receipt", "properties": {"name": {"description": "Name of the item", "title": "Name", "type": "string"}, "quantity": {"anyOf": [{"type": "integer"}, {"type": "number"}], "description": "Quantity purchased (can be decimal for items sold by weight)", "title": "Quantity"}, "price": {"description": "Price per item", "title": "Price", "type": "number"}}, "required": ["name", "quantity", "price"], "title": "ReceiptItem", "type": "object"}}, "description": "Model for shop receipt data extraction", "properties": {"merchant_name": {"description": "Name of the merchant/store", "title": "Merchant Name", "type": "string"}, "total_amount": {"description": "Total amount of the purchase", "title": "Total Amount", "type": "number"}, "date_of_purchase": {"description": "Date of purchase in YYYY-MM-DD format", "title": "Date Of Purchase", "type": "string"}, "items": {"description": "List of items purchased", "items": {"$ref": "#/$defs/ReceiptItem"}, "title": "Items", "type": "array"}, "payment_method": {"description": "Payment method used", "title": "Payment Method", "type": "string"}}, "required": ["merchant_name", "total_amount", "date_of_purchase", "items", "payment_method"]}\n```\n\nImportant notes:\n- For numeric fields (total_amount, price, quantity), if the value cannot be found, use 0.\n- For all other fields, use "Not found" if the value cannot be found.\n- For items, extract as many as you can identify\n- Quantity can be decimal (e.g., 2.5 lbs, 0.5 kg) for items sold by weight\n- Use the exact quantity as shown on the receipt, whether it\'s whole numbers or decimals\n- Price should be the price per unit/item\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 15:38:47,670 - llm_service - ERROR - Error extracting data for shop_receipt: LLM returned empty output.
2025-06-24 15:38:47,670 - llm_service - ERROR - Raw LLM output: 
2025-06-24 15:38:47,670 - llm_service - ERROR - Error extracting data for shop_receipt: LLM returned empty output.
2025-06-24 15:38:47,670 - llm_service - ERROR - Raw LLM output: 
2025-06-24 15:38:47,670 - pipeline - ERROR - Error processing document documents/shop_receipts/1.jpg: LLM returned empty output.
2025-06-24 15:38:47,671 - pipeline - INFO - Result saved to: output/1_result.json
2025-06-24 15:38:47,671 - __main__ - INFO - shop_receipt: 0/1 documents processed successfully
2025-06-24 15:38:47,671 - __main__ - INFO - Pipeline execution completed
2025-06-24 18:41:01,047 - __main__ - INFO - Configuration validated successfully
2025-06-24 18:41:01,068 - __main__ - INFO - Processing shop_receipt documents from: documents/shop_receipts
2025-06-24 18:41:01,068 - pipeline - INFO - Found 1 files to process in documents/shop_receipts
2025-06-24 18:41:01,068 - pipeline - INFO - Processing document: documents/shop_receipts/1.jpg
2025-06-24 18:41:01,068 - pipeline - INFO - Extracting text using OCR...
2025-06-24 18:41:02,281 - pipeline - INFO - Extracted 819 characters of text
2025-06-24 18:41:02,281 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 18:41:11,999 - llm_service - ERROR - LLM returned empty output for document type: shop_receipt
2025-06-24 18:41:12,000 - llm_service - ERROR - Prompt sent to LLM (text length: 819): [HumanMessage(content='You are an expert at extracting structured data from shop receipts.\n\nExtract the following information from the provided text:\n- Merchant Name: Name of the merchant/store\n- Total Amount: Total amount of the purchase (numeric value)\n- Date of Purchase: Date of purchase in YYYY-MM-DD format\n- Items: List of items with name, quantity, and price\n- Payment Method: Payment method used\n\nText from document:\nTRADER JOE\'S\n2001 Greenville Ave\nDallas TX 75206\nStore #403\n(469) 334-0614\nOPEN 8:00AM TO 9:00PM DAILY\nR-CARROTS SHREDDED 10 OZ\n1.29\nR-CUCUMBERS PERSIAN 1 LB\n1.99\nTOMATOES CRUSHED NO SALT\n1.59\nTOMATOES WHOLE NO SALT W/BASIL\n1.59\nORGANIC OLD FASHIONED OATMEAL\n2.69\nMINI-PEARL TOMATOES..\n2.49\nPKG SHREDDED MOZZARELLA LITE T 3.99\nEGGS 1 DOZ ORGANIC BROWN.\n3.79\nBEANS GARBANZO\n0.89\nSPROUTED CA STYLE\n2.99\nA-AVOCADOS HASS BAG 4CT\n3.99\nA-APPLE BAG JAZZ 2 LB\n2.99\nA-PEPPER BELL EACH XL RED\n0.99\nGROCERY NON TAXABLE\n0.98\n2 @ 0.49\nBANANAS ORGANIC\n0.87\n3EA @ 0.29/EA\nCREAMY SALTED PEANUT BUTTER\n2.49\nWHL WHT PITA BREAD\n1.69\nGROCERY NON TAXABLE\n1.38\n2 @ 0.69\nSUBTOTAL\n$38.68\nTOTAL\nCASH\nCHANGE\nITEMS 22\n$38.68\n$40.00\n$1.32\nHiggins, Ryan\n06-28-2014 12:34PM 0403 04 1346 4683\nTHANK YOU FOR SHOPPING AT\nTRADER JOE\'S\nwww.traderjoes.com\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"ReceiptItem": {"description": "Model for individual items in a receipt", "properties": {"name": {"description": "Name of the item", "title": "Name", "type": "string"}, "quantity": {"anyOf": [{"type": "integer"}, {"type": "number"}], "description": "Quantity purchased (can be decimal for items sold by weight)", "title": "Quantity"}, "price": {"description": "Price per item", "title": "Price", "type": "number"}}, "required": ["name", "quantity", "price"], "title": "ReceiptItem", "type": "object"}}, "description": "Model for shop receipt data extraction", "properties": {"merchant_name": {"description": "Name of the merchant/store", "title": "Merchant Name", "type": "string"}, "total_amount": {"description": "Total amount of the purchase", "title": "Total Amount", "type": "number"}, "date_of_purchase": {"description": "Date of purchase in YYYY-MM-DD format", "title": "Date Of Purchase", "type": "string"}, "items": {"description": "List of items purchased", "items": {"$ref": "#/$defs/ReceiptItem"}, "title": "Items", "type": "array"}, "payment_method": {"description": "Payment method used", "title": "Payment Method", "type": "string"}}, "required": ["merchant_name", "total_amount", "date_of_purchase", "items", "payment_method"]}\n```\n\nImportant notes:\n- For numeric fields (total_amount, price, quantity), if the value cannot be found, use 0.\n- For all other fields, use "Not found" if the value cannot be found.\n- For items, extract as many as you can identify\n- Quantity can be decimal (e.g., 2.5 lbs, 0.5 kg) for items sold by weight\n- Use the exact quantity as shown on the receipt, whether it\'s whole numbers or decimals\n- Price should be the price per unit/item\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 18:41:12,000 - llm_service - WARNING - Retrying LLM with half the text length.
2025-06-24 18:41:21,724 - llm_service - ERROR - LLM returned empty output for document type: shop_receipt
2025-06-24 18:41:21,725 - llm_service - ERROR - Prompt sent to LLM (text length: 409): [HumanMessage(content='You are an expert at extracting structured data from shop receipts.\n\nExtract the following information from the provided text:\n- Merchant Name: Name of the merchant/store\n- Total Amount: Total amount of the purchase (numeric value)\n- Date of Purchase: Date of purchase in YYYY-MM-DD format\n- Items: List of items with name, quantity, and price\n- Payment Method: Payment method used\n\nText from document:\nTRADER JOE\'S\n2001 Greenville Ave\nDallas TX 75206\nStore #403\n(469) 334-0614\nOPEN 8:00AM TO 9:00PM DAILY\nR-CARROTS SHREDDED 10 OZ\n1.29\nR-CUCUMBERS PERSIAN 1 LB\n1.99\nTOMATOES CRUSHED NO SALT\n1.59\nTOMATOES WHOLE NO SALT W/BASIL\n1.59\nORGANIC OLD FASHIONED OATMEAL\n2.69\nMINI-PEARL TOMATOES..\n2.49\nPKG SHREDDED MOZZARELLA LITE T 3.99\nEGGS 1 DOZ ORGANIC BROWN.\n3.79\nBEANS GARBANZO\n0.89\nSPROUTED CA STYLE\n2.99\nA-AVOCAD\n\nReturn the data in the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"$defs": {"ReceiptItem": {"description": "Model for individual items in a receipt", "properties": {"name": {"description": "Name of the item", "title": "Name", "type": "string"}, "quantity": {"anyOf": [{"type": "integer"}, {"type": "number"}], "description": "Quantity purchased (can be decimal for items sold by weight)", "title": "Quantity"}, "price": {"description": "Price per item", "title": "Price", "type": "number"}}, "required": ["name", "quantity", "price"], "title": "ReceiptItem", "type": "object"}}, "description": "Model for shop receipt data extraction", "properties": {"merchant_name": {"description": "Name of the merchant/store", "title": "Merchant Name", "type": "string"}, "total_amount": {"description": "Total amount of the purchase", "title": "Total Amount", "type": "number"}, "date_of_purchase": {"description": "Date of purchase in YYYY-MM-DD format", "title": "Date Of Purchase", "type": "string"}, "items": {"description": "List of items purchased", "items": {"$ref": "#/$defs/ReceiptItem"}, "title": "Items", "type": "array"}, "payment_method": {"description": "Payment method used", "title": "Payment Method", "type": "string"}}, "required": ["merchant_name", "total_amount", "date_of_purchase", "items", "payment_method"]}\n```\n\nImportant notes:\n- For numeric fields (total_amount, price, quantity), if the value cannot be found, use 0.\n- For all other fields, use "Not found" if the value cannot be found.\n- For items, extract as many as you can identify\n- Quantity can be decimal (e.g., 2.5 lbs, 0.5 kg) for items sold by weight\n- Use the exact quantity as shown on the receipt, whether it\'s whole numbers or decimals\n- Price should be the price per unit/item\nReturn ONLY the JSON object, with no extra text, explanation, or formatting.', additional_kwargs={}, response_metadata={})]
2025-06-24 18:41:21,725 - llm_service - ERROR - Error extracting data for shop_receipt: LLM returned empty output.
2025-06-24 18:41:21,725 - llm_service - ERROR - Raw LLM output: 
2025-06-24 18:41:21,725 - llm_service - ERROR - Error extracting data for shop_receipt: LLM returned empty output.
2025-06-24 18:41:21,725 - llm_service - ERROR - Raw LLM output: 
2025-06-24 18:41:21,725 - pipeline - ERROR - Error processing document documents/shop_receipts/1.jpg: LLM returned empty output.
2025-06-24 18:41:21,726 - pipeline - INFO - Result saved to: output/1_result.json
2025-06-24 18:41:21,726 - __main__ - INFO - shop_receipt: 0/1 documents processed successfully
2025-06-24 18:41:21,726 - __main__ - INFO - Pipeline execution completed
2025-06-24 18:44:24,895 - __main__ - INFO - Configuration validated successfully
2025-06-24 18:44:25,027 - __main__ - INFO - Processing shop_receipt documents from: documents/shop_receipts
2025-06-24 18:44:25,027 - pipeline - INFO - Found 1 files to process in documents/shop_receipts
2025-06-24 18:44:25,027 - pipeline - INFO - Processing document: documents/shop_receipts/1.jpg
2025-06-24 18:44:25,027 - pipeline - INFO - Extracting text using OCR...
2025-06-24 18:44:26,204 - pipeline - INFO - Extracted 819 characters of text
2025-06-24 18:44:26,204 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 18:44:36,391 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 18:44:36,411 - pipeline - INFO - Document processing completed successfully
2025-06-24 18:44:36,412 - pipeline - INFO - Result saved to: output/1_result.json
2025-06-24 18:44:36,412 - __main__ - INFO - shop_receipt: 1/1 documents processed successfully
2025-06-24 18:44:36,412 - __main__ - INFO - Pipeline execution completed
2025-06-24 18:45:53,596 - __main__ - INFO - Configuration validated successfully
2025-06-24 18:45:53,684 - __main__ - INFO - Processing driving_license documents from: documents/driving_license
2025-06-24 18:45:53,684 - pipeline - INFO - Found 3 files to process in documents/driving_license
2025-06-24 18:45:53,684 - pipeline - INFO - Processing document: documents/driving_license/generated_license_1099.png
2025-06-24 18:45:53,684 - pipeline - INFO - Processing document: documents/driving_license/generated_license_10.png
2025-06-24 18:45:53,684 - pipeline - INFO - Extracting text using OCR...
2025-06-24 18:45:53,684 - pipeline - INFO - Extracting text using OCR...
2025-06-24 18:45:53,684 - pipeline - INFO - Processing document: documents/driving_license/generated_license_0.png
2025-06-24 18:45:53,684 - pipeline - INFO - Extracting text using OCR...
2025-06-24 18:45:55,854 - pipeline - INFO - Extracted 771 characters of text
2025-06-24 18:45:55,855 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 18:45:55,954 - pipeline - INFO - Extracted 794 characters of text
2025-06-24 18:45:55,954 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 18:45:56,078 - pipeline - INFO - Extracted 800 characters of text
2025-06-24 18:45:56,078 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 18:45:57,380 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 18:45:57,402 - pipeline - INFO - Document processing completed successfully
2025-06-24 18:45:57,403 - pipeline - INFO - Result saved to: output/generated_license_10_result.json
2025-06-24 18:45:57,518 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 18:45:57,521 - pipeline - INFO - Document processing completed successfully
2025-06-24 18:45:57,522 - pipeline - INFO - Result saved to: output/generated_license_1099_result.json
2025-06-24 18:45:57,649 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 18:45:57,651 - pipeline - INFO - Document processing completed successfully
2025-06-24 18:45:57,652 - pipeline - INFO - Result saved to: output/generated_license_0_result.json
2025-06-24 18:45:57,653 - __main__ - INFO - driving_license: 3/3 documents processed successfully
2025-06-24 18:45:57,653 - __main__ - INFO - Pipeline execution completed
2025-06-24 20:04:46,066 - __main__ - INFO - Configuration validated successfully
2025-06-24 20:04:46,204 - __main__ - INFO - Processing shop_receipt documents from: documents/shop_receipts
2025-06-24 20:04:46,204 - pipeline - INFO - Found 1 files to process in documents/shop_receipts
2025-06-24 20:04:46,204 - pipeline - INFO - Processing document: documents/shop_receipts/1.jpg
2025-06-24 20:04:46,204 - pipeline - INFO - Extracting text using OCR...
2025-06-24 20:04:47,702 - pipeline - INFO - Extracted 819 characters of text
2025-06-24 20:04:47,702 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 20:04:55,001 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 20:04:55,024 - pipeline - INFO - Document processing completed successfully
2025-06-24 20:04:55,025 - pipeline - INFO - Result saved to: output/1_result.json
2025-06-24 20:04:55,025 - __main__ - INFO - shop_receipt: 1/1 documents processed successfully
2025-06-24 20:04:55,025 - __main__ - INFO - Pipeline execution completed
2025-06-24 20:05:18,659 - __main__ - INFO - Configuration validated successfully
2025-06-24 20:05:18,747 - __main__ - INFO - Processing resume documents from: documents/resumes
2025-06-24 20:05:18,747 - pipeline - INFO - Found 2 files to process in documents/resumes
2025-06-24 20:05:18,747 - pipeline - INFO - Processing document: documents/resumes/50586528-6531.jpg
2025-06-24 20:05:18,747 - pipeline - INFO - Processing document: documents/resumes/Piyush_Gupta_Resume.pdf
2025-06-24 20:05:18,747 - pipeline - INFO - Extracting text using OCR...
2025-06-24 20:05:18,747 - pipeline - INFO - Extracting text using OCR...
2025-06-24 20:05:20,283 - pipeline - INFO - Extracted 2166 characters of text
2025-06-24 20:05:20,283 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 20:05:20,283 - llm_service - WARNING - OCR text too long (2166 chars), truncating to 2000 chars for LLM.
2025-06-24 20:05:20,801 - pipeline - INFO - Extracted 3468 characters of text
2025-06-24 20:05:20,801 - pipeline - INFO - Extracting structured data using LLM...
2025-06-24 20:05:20,801 - llm_service - WARNING - OCR text too long (3468 chars), truncating to 2000 chars for LLM.
2025-06-24 20:05:23,567 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 20:05:23,585 - pipeline - INFO - Document processing completed successfully
2025-06-24 20:05:23,586 - pipeline - INFO - Result saved to: output/Piyush_Gupta_Resume_result.json
2025-06-24 20:05:23,963 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 20:05:23,967 - pipeline - INFO - Document processing completed successfully
2025-06-24 20:05:23,968 - pipeline - INFO - Result saved to: output/50586528-6531_result.json
2025-06-24 20:05:23,968 - __main__ - INFO - resume: 2/2 documents processed successfully
2025-06-24 20:05:23,968 - __main__ - INFO - Pipeline execution completed
